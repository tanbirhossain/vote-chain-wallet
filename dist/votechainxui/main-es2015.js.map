{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Components/Client/candidates/candidates.component.ts","./src/app/Components/Client/candidates/candidates.component.html","./src/app/Components/Client/election-detail/election-detail.component.ts","./src/app/Components/Client/election-detail/election-detail.component.html","./src/app/Components/Client/elections/elections.component.ts","./src/app/Components/Client/elections/elections.component.html","./src/app/Components/Security/login-private/login-private.component.ts","./src/app/Components/Security/login-private/login-private.component.html","./src/app/Components/Security/login/login.component.ts","./src/app/Components/Security/login/login.component.html","./src/app/Components/Security/registration/registration.component.ts","./src/app/Components/Security/registration/registration.component.html","./src/app/Components/Security/scanner/scanner.component.ts","./src/app/Components/Security/scanner/scanner.component.html","./src/app/Components/employees/employee-add/employee-add.component.ts","./src/app/Components/employees/employee-add/employee-add.component.html","./src/app/Components/employees/employee-list/employee-list.component.ts","./src/app/Components/employees/employee-list/employee-list.component.html","./src/app/Components/page-not-found/page-not-found.component.ts","./src/app/Components/page-not-found/page-not-found.component.html","./src/app/Shared/app.component.ts","./src/app/Shared/app.component.html","./src/app/app-routing.module.ts","./src/app/app.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.interceptor.ts","./src/app/models/config.ts","./src/app/models/login-private.ts","./src/app/models/vote.ts","./src/app/services/account.service.ts","./src/app/services/elections.service.ts","./src/app/services/employee.service.ts","./src/app/services/private-account.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { Election } from 'src/app/models/election';\nimport { ElectionsService } from 'src/app/services/elections.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-candidates',\n  templateUrl: './candidates.component.html',\n  styleUrls: ['./candidates.component.css']\n})\nexport class CandidatesComponent implements OnInit {\n  election: any;\n  routeValue: number;\n  constructor(private fb: FormBuilder, private route: ActivatedRoute, private router: Router, private electionsService: ElectionsService) {\n  }\n  ngOnInit() {\n    this.routeValue = this.route.snapshot.params.id;\n    console.log(\"param : \", this.route.snapshot.params.id);\n    if (this.routeValue != null) {\n\n      // this.getEmployee(this.routeValue);\n    }\n  }\n  // getEmployee(id: number) {\n  //   console.log(\"get ID: \", id);\n  //   this.electionsService.getElectionDetails(id).subscribe(\n  //     (result: any) => {\n  //       console.log(result);\n  //       this.election = result;\n  //     }\n  //   );\n  // }\n\n}\n","<p>\n  candidates works!\n</p>\n","import { Vote } from './../../../models/vote';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { Election } from 'src/app/models/election';\nimport { ElectionsService } from 'src/app/services/elections.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport Swal from 'sweetalert2';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-election-detail',\n  templateUrl: './election-detail.component.html',\n  styleUrls: ['./election-detail.component.css']\n})\nexport class ElectionDetailComponent implements OnInit {\n  election: any;\n  candidateList: any;\n  routeValue: string;\n\n  constructor(private location: Location, private fb: FormBuilder,\n    private route: ActivatedRoute, private router: Router, private electionsService: ElectionsService) {\n  }\n  ngOnInit() {\n\n    this.routeValue = this.route.snapshot.params.id;\n    console.log(\"param : \", this.route.snapshot.params.id);\n    if (this.routeValue != null) {\n\n      this.getEmployee(this.routeValue);\n    }\n  }\n  getEmployee(id: string) {\n    console.log(\"get ID: \", id);\n    this.electionsService.getElectionDetails(id).subscribe(\n      (result: any) => {\n        console.log(result);\n        this.election = result;\n        this.candidateList = result.candidates;\n      }\n    );\n  }\n\n  userVote(electionAddress: string, candidateAddress: string, candidateName: string) {\n\n    let uservote = new Vote(electionAddress, candidateAddress);\n    console.log(\"VOTE : \", uservote);\n\n    Swal.fire({\n      title: 'Are you sure for ' + candidateName + ' ?',\n      text: \"You can't be able to vote the secound time for this election!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      showLoaderOnConfirm: true,\n      confirmButtonText: 'Yes, Vote it!'\n    }).then((result) => {\n      if (result.value) {\n        Swal.fire('Please wait');\n        Swal.showLoading();\n        this.electionsService.userVote(uservote).subscribe(\n          (userResult: any) => {\n            console.log(\"VoteResult: \", userResult);\n            Swal.fire(\n              'Voted!',\n              'You Voted Successfully.',\n              'success'\n            );\n            this.router.navigate(['/elections']);\n          },\n          (err: HttpErrorResponse) => {\n            console.log(err);\n            Swal.fire('Oops...', err.error.Message, 'error');\n          });\n      }\n    });\n\n  }\n\n  goBack() {\n    if (window.history.length > 1) {\n      this.location.back();\n    } else {\n      this.router.navigate(['/']);\n    }\n  }\n\n\n}\n","\n\n\n<div class=\"content content-fixed bd-b\">\n  <div class=\"container pd-x-0 pd-lg-x-10 pd-xl-x-0\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            Election Information\n            <button class=\"btn btn-light btn-sm float-right my-1\" (click)=\"goBack()\"> &lt; Back</button>\n\n          </div>\n          <div class=\"card-body\">\n            <table\n              class=\"table table-sm table-hover table-responsive-sm table-responsive-md table-responsive-lg table-bordered\">\n              <tbody>\n                <tr>\n\n                  <td style=\"font-weight:bold\">Election Name</td>\n                  <td id=\"electionName\">{{election.name}}</td>\n\n                </tr>\n                <tr>\n\n                  <td style=\"font-weight:bold\">Status</td>\n                  <td id=\"electionStatus\"><span class=\"badge badge-info\">{{election.status}}</span></td>\n\n                </tr>\n                <tr>\n                  <td style=\"font-weight:bold\">Address</td>\n                  <td id=\"electionAddress\">{{election.address}}</td>\n\n                </tr>\n                <tr>\n                  <td style=\"font-weight:bold\">Total Candidates</td>\n                  <td id=\"electionTotalCandidates\"><span\n                      class=\"badge badge-pill badge-primary\">{{election.candidates.length}}</span></td>\n                </tr>\n              </tbody>\n            </table>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div><!-- container -->\n</div><!-- content -->\n\n\n\n\n\n<!--\n<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        Candidate List\n      </div>\n      <div class=\"card-body\">\n        <table\n          class=\"table table-hover table-sm table-responsive-sm table-responsive-md table-responsive-lg table-bordered table-striped\">\n          <thead>\n            <tr>\n              <th>Name</th>\n\n              <th>Address</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let value of candidateList\">\n\n              <td>\n                <button class=\"btn btn-danger\" (click)=\"userVote(election.address,value.candidateAddress)\">Vote</button>\n\n              </td>\n              <td>{{ value.candidateName }}</td>\n              <td>{{ value.candidateAddress }}</td>\n\n            </tr>\n          </tbody>\n\n        </table>\n\n      </div>\n    </div>\n  </div>\n</div> -->\n\n\n\n<div class=\"content content-fixed bd-b\">\n  <div class=\"container pd-x-0 pd-lg-x-10 pd-xl-x-0\">\n    <div class=\"search-form mg-t-20 mg-sm-t-0\">\n      <input type=\"search\" class=\"form-control\" placeholder=\"Search candiadte\">\n      <button class=\"btn\" type=\"button\"><i data-feather=\"search\"></i></button>\n    </div>\n  </div><!-- container -->\n</div><!-- content -->\n\n\n<div class=\"content\">\n  <div class=\"container pd-x-0 pd-lg-x-10 pd-xl-x-0\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <div class=\"row row-xs mg-b-25\">\n\n          <div class=\"col-sm-6 col-md-4 mg-t-10\" *ngFor=\"let value of candidateList\">\n            <div class=\"card card-profile\">\n              <img src=\"/assets/theme/assets/img/img3.jpg\" class=\"card-img-top\" alt=\"\">\n              <div class=\"card-body tx-13\">\n                <div>\n                  <a>\n                    <div class=\"avatar avatar-lg\"><span class=\"avatar-initial rounded-circle bg-dark\"></span></div>\n                  </a>\n                  <h5><a href=\"#\">{{ value.candidateName }}</a></h5>\n\n                  <div class=\"mg-b-25\" style=\"word-break: break-all;\"><span class=\"tx-12 tx-color-03\">{{ value.candidateAddress }}</span></div>\n\n                  <button class=\"btn btn-block btn-primary\" (click)=\"userVote(election.address,value.candidateAddress,value.candidateName)\">Vote</button>\n                </div>\n              </div>\n            </div><!-- card -->\n          </div><!-- col -->\n        </div><!-- row -->\n      </div><!-- col -->\n\n    </div><!-- row -->\n  </div><!-- container -->\n</div><!-- content -->\n","import { ElectionsService } from './../../../services/elections.service';\nimport { from } from 'rxjs';\nimport { Employee } from 'src/app/models/employee';\nimport { EmployeeService } from './../../../services/employee.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-elections',\n  templateUrl: './elections.component.html',\n  styleUrls: ['./elections.component.css']\n})\nexport class ElectionsComponent implements OnInit {\n  electionList: any;\n  constructor(private router: Router, private electionsService: ElectionsService) { }\n\n  ngOnInit() {\n    this.electionsService.getAllElectionList().subscribe(\n      (result: any) => {\n        console.log(\"list data: \", result);\n        this.electionList = result.items;\n      }\n\n    );\n  }\n}\n","<!-- <table class=\"table\">\n  <thead>\n    <tr>\n      <th></th>\n      <th>Id</th>\n      <th>Name</th>\n      <th>Status</th>\n      <th>Total Particapate</th>\n      <th>Address</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let value of electionList\">\n      <td><a [routerLink]=\"['/elections/detail', value.id]\" class=\"\">Detail</a></td>\n      <td>{{ value.id }}</td>\n      <td>{{ value.name }}</td>\n      <td>{{ value.status }}</td>\n      <td>{{ value.candidates.length }}</td>\n      <td>{{ value.address }}</td>\n    </tr>\n  </tbody>\n</table> -->\n\n\n\n\n\n<div class=\"content content-fixed bd-b\">\n  <div class=\"container pd-x-0 pd-lg-x-10 pd-xl-x-0\">\n    <div class=\"search-form mg-t-0 mg-sm-t-0\">\n      <input type=\"search\" class=\"form-control\" placeholder=\"Search election\">\n      <button class=\"btn\" type=\"button\"><i data-feather=\"search\"></i></button>\n    </div>\n  </div><!-- container -->\n</div><!-- content -->\n\n<div class=\"content\">\n  <div class=\"container pd-x-0 pd-lg-x-10 pd-xl-x-0\">\n    <div class=\"row\">\n      <div *ngFor=\"let value of electionList;\" class=\"col-sm-6 col-lg-3 mg-t-20 mg-sm-t-0\">\n        <div class=\"card card-help\">\n          <div class=\"card-body tx-13\">\n            <div class=\"tx-60 lh-0 mg-b-25\"><i class=\"icon ion-ios-cog\"></i></div>\n            <h5><a [routerLink]=\"['/elections/detail', value.address]\" class=\"link-01\">{{ value.name }}</a></h5>\n            <p class=\"tx-color-03 mg-b-0\" style=\"word-break: break-all;\">{{ value.address }}</p>\n          </div><!-- card-body -->\n          <div class=\"card-footer tx-13\" [routerLink]=\"['/elections/detail', value.address]\">\n            <span>{{ value.candidates.length }} Particapates </span>\n            <a [routerLink]=\"['/elections/detail', value.address]\" class=\"tx-18 lh-0\"><i class=\"icon ion-md-arrow-forward\"></i></a>\n          </div><!-- card-footer -->\n        </div><!-- card -->\n      </div><!-- col -->\n\n    </div><!-- row -->\n  </div>\n</div><!-- content -->\n\n","import { DeviceVM } from './../../../models/device-vm';\nimport { element } from 'protractor';\nimport { LoginPrivate } from './../../../models/login-private';\nimport { PrivateAccountService } from './../../../services/private-account.service';\nimport { User } from './../../../models/user';\nimport { Validators } from '@angular/forms';\nimport { AccountService } from './../../../services/account.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BrowserQRCodeReader } from '@zxing/library';\n\n\ndeclare var require: any;\n@Component({\n  selector: 'app-login-private',\n  templateUrl: './login-private.component.html',\n  styleUrls: ['./login-private.component.css']\n})\n\nexport class LoginPrivateComponent implements OnInit {\n\n  constructor(private fb: FormBuilder,\n                private route: ActivatedRoute,\n                private router: Router,\n                private accountService: PrivateAccountService) { }\n  angForm: any;\n  message: string;\n  qrcodestring: any;\n  qrCodeReader: any;\n  url: any;\n  imgSrc: string;\n\n  //  deviceList: string[];\n\n  ngOnInit() {\n    this.createFrom();\n  }\n\n  createFrom() {\n    this.angForm = this.fb.group({\n      privateKey: [\"\", Validators.required]\n    });\n  }\n  onFormSubmit() {\n    this.LoginUserAccount(this.angForm.value);\n  }\n\n\n  onQRCodeUpload() {\n    // tslint:disable-next-line: deprecation\n    const codeReader = new BrowserQRCodeReader();\n\n    const img = document.getElementById('img') as HTMLImageElement;\n    console.log(\"Img\", img);\n\n    try {\n      let result: any = codeReader.decodeFromImage(img);\n      console.log(\"Retun function\", result);\n      console.log(\"Retun String\", result.__zone_symbol__value.text);\n      // this.qrcodestring = result.__zone_symbol__value.text;\n    } catch (err) {\n      console.log(\"QR string Error: \", err);\n    }\n  }\n\n  onSelectFile(event) { // called each time file input changes\n    if (event.target.files && event.target.files[0]) {\n      let reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]); // read file as data url\n      // tslint:disable-next-line:no-shadowed-variable\n      reader.onload = async (event) => { // called once readAsDataURL is completed\n        this.url = event.target.result;\n        // tslint:disable-next-line: deprecation\n        const codeReader = new BrowserQRCodeReader();\n        try {\n          let oImg = document.createElement(\"img\") as HTMLImageElement;\n          oImg.setAttribute('src', event.target.result.toString());\n          let result: any = codeReader.decodeFromImage(oImg);\n          console.log(\"Retun Private Key:  \", await result.__zone_symbol__value.text);\n          console.log(\"Retun function\", await result);\n\n          this.qrcodestring = await result.__zone_symbol__value.text;\n\n          let userLoginPrivte = new LoginPrivate(result.__zone_symbol__value.text);\n          this.LoginUserAccount(userLoginPrivte);\n        } catch (err) {\n          this.message = \"Wronge image uploaded.Please try again.\";\n          console.log(\"QR string Error: \", err);\n        }\n      };\n    }\n  }\n\n  LoginUserAccount(user: LoginPrivate) {\n    console.log(\"loginBefore: \", user.privateKey);\n    this.accountService.signInAccount(user).subscribe(\n      (result: any) => {\n        console.log(\"loginResult: \", result);\n        localStorage.setItem('userPublicKey', result.publicKey);\n        localStorage.setItem('userPrivateKey', user.privateKey);\n        localStorage.setItem('userName', result.name);\n        this.router.navigate(['/elections']);\n      },\n      (err: HttpErrorResponse) => {\n        console.log(err);\n        this.message = err.error.Message;\n      });\n  }\n\n  deviceList: DeviceVM[];\n\n  Scan() {\n    this.router.navigate(['/scanner']);\n  }\n\n\n\n\n}\n","<!-- Begin page content -->\n<!--\n<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <form [formGroup]=\"angForm\" novalidate>\n        <div class=\"form-group\">\n          <label>Private Key</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"privateKey\" #privateKey />\n        </div>\n        <div\n          *ngIf=\"angForm.controls['privateKey'].invalid && (angForm.controls['privateKey'].dirty || angForm.controls['privateKey'].touched)\"\n          class=\"alert alert-danger\">\n          <div *ngIf=\"angForm.controls['privateKey'].errors.required\">\n            Private Key is required.\n          </div>\n        </div>\n        <div *ngIf=\"message !=null\" class=\"alert alert-danger\">\n          {{message}}\n        </div>\n\n      </form>\n    </div>\n    <div class=\"card-footer\">\n      <div class=\"form-group text-center\">\n        <button type=\"submit\" (click)=\"onFormSubmit()\" [disabled]=\"angForm.pristine || angForm.invalid\"\n          class=\"btn btn-primary btn-block\"> Log In</button>\n      </div>\n    </div>\n  </div>\n</div>\n -->\n\n\n\n\n<div class=\"content content-fixed content-auth\">\n  <div class=\"container\">\n    <div class=\"media align-items-stretch justify-content-center ht-100p pos-relative\">\n      <div class=\"media-body align-items-center d-none d-lg-flex\">\n        <div class=\"mx-wd-600\">\n          <img src=\"/assets/theme/assets/img/img15.png\" class=\"img-fluid\" alt=\"\">\n        </div>\n\n      </div>\n      <!-- media-body -->\n      <div class=\"sign-wrapper mg-lg-l-50 mg-xl-l-60\">\n        <div class=\"wd-100p\">\n          <h3 class=\"tx-color-01 mg-b-5\">Sign In</h3>\n          <p class=\"tx-color-03 tx-16 mg-b-40\">Welcome back! Please signin to continue.</p>\n          <form [formGroup]=\"angForm\" novalidate>\n            <div class=\"form-group\">\n              <label>Private Key</label>\n              <input type=\"text\" class=\"form-control\" placeholder=\"Private Key\" formControlName=\"privateKey\"\n                #privateKey />\n            </div>\n            <div\n              *ngIf=\"angForm.controls['privateKey'].invalid && (angForm.controls['privateKey'].dirty || angForm.controls['privateKey'].touched)\"\n              class=\"alert alert-danger\">\n              <div *ngIf=\"angForm.controls['privateKey'].errors.required\">\n                Private Key is required.\n              </div>\n            </div>\n            <div *ngIf=\"message !=null\" class=\"alert alert-danger\">\n              {{message}}\n            </div>\n          </form>\n          <button type=\"submit\" class=\"btn btn-brand-02 btn-block\" (click)=\"onFormSubmit()\"\n            [disabled]=\"angForm.pristine || angForm.invalid\">Sign In</button>\n          <div class=\"divider-text\">or</div>\n          <label class=\"btn btn-outline-facebook btn-block\">\n            <span>Sign In With QRCode Upload</span>\n            <input type='file' (change)=\"onSelectFile($event)\">\n          </label>\n          <!-- <button class=\"btn btn-outline-facebook btn-block\" (click)=\"onQRCodeUpload()\">Sign In With QRCode Upload</button> -->\n          <button class=\"btn btn-outline-twitter btn-block\" (click)=\"Scan()\">Sign In With QR Scan</button>\n          <!-- <div class=\"tx-13 mg-t-20 tx-center\">Don't have an account? <a href=\"page-signup.html\">Create an Account</a></div> -->\n        </div>\n      </div><!-- sign-wrapper -->\n    </div><!-- media -->\n  </div><!-- container -->\n</div><!-- content -->\n\n","import { User } from './../../../models/user';\nimport { Validators } from '@angular/forms';\nimport { AccountService } from './../../../services/account.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  angForm: any;\n  message: string;\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private accountService: AccountService) { }\n\n  ngOnInit() {\n    this.createFrom();\n  }\n\n  createFrom() {\n    this.angForm = this.fb.group({\n      username: [\"\", Validators.required],\n      password: [\"\", Validators.required]\n    });\n  }\n  onFormSubmit() {\n\n     this.LoginUserAccount(this.angForm.value);\n\n  }\n\n  LoginUserAccount(user: User) {\n    this.accountService.signInAccount(user).subscribe(\n      (result: any) => {\n          console.log(\"login\");\n          localStorage.setItem('userAccessToken', result.accessToken);\n          localStorage.setItem('userRefreshToken', result.refreshToken);\n          this.router.navigate(['/employee/list']);\n      },\n      (err: HttpErrorResponse ) => {\n        console.log(err.error.message);\n        this.message = err.error.message;\n      });\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n      <form [formGroup]=\"angForm\" novalidate>\n        <div class=\"form-group\">\n          <label class=\"col-md-4\">username</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"username\" #username />\n        </div>\n        <div *ngIf=\"angForm.controls['username'].invalid && (angForm.controls['username'].dirty || angForm.controls['username'].touched)\"\n          class=\"alert alert-danger\">\n          <div *ngIf=\"angForm.controls['username'].errors.required\">\n              username is required.\n          </div>\n        </div>\n\n\n        <div class=\"form-group\">\n            <label class=\"col-md-4\">password</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"password\" #password />\n          </div>\n          <div *ngIf=\"angForm.controls['password'].invalid && (angForm.controls['password'].dirty || angForm.controls['password'].touched)\"\n            class=\"alert alert-danger\">\n            <div *ngIf=\"angForm.controls['password'].errors.required\">\n                password is required.\n            </div>\n          </div>\n\n<div *ngIf=\"message !=null\" class=\"alert alert-danger\">\n    {{message}}\n</div>\n\n        <div class=\"form-group\">\n          <button type=\"submit\" (click)=\"onFormSubmit()\" [disabled]=\"angForm.pristine || angForm.invalid\" class=\"btn btn-primary btn-block\"> Log In</button>\n        </div>\n      </form>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  registration works!\n</p>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { LoginPrivateComponent } from '../login-private/login-private.component';\nimport { LoginPrivate } from './../../../models/login-private';\nimport { PrivateAccountService } from 'src/app/services/private-account.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-scanner',\n  templateUrl: './scanner.component.html',\n  styleUrls: ['./scanner.component.scss']\n})\n\n\nexport class ScannerComponent implements OnInit {\n  availableDevices: MediaDeviceInfo[];\n  currentDevice: MediaDeviceInfo = null;\n  hasDevices: boolean;\n  hasPermission: boolean;\n  qrResult: any;\n  guestExist: boolean;\n  // loginPrivateComponent: LoginPrivateComponent;\n  @ViewChild(\"LoginPrivateComponent\") loginPrivateComponent: LoginPrivateComponent;\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private accountService: PrivateAccountService) { }\n\n  ngOnInit(): void {\n  }\n\n  // Clears the QR code scanned\n  clearResult(): void {\n    this.qrResult = null;\n  }\n\n  // Scans the QR code\n  onCodeResult(resultString: string): void {\n    this.login(resultString);\n\n  }\n\n  login(resultString: string): void {\n    let user = new LoginPrivate(resultString);\n    this.accountService.signInAccount(user).subscribe(\n      (result: any) => {\n        console.log(\"loginResult: \", result);\n        localStorage.setItem('userPublicKey', result.publicKey);\n        localStorage.setItem('userPrivateKey', user.privateKey);\n        localStorage.setItem('userName', result.name);\n        this.router.navigate(['/elections']);\n      },\n      (err: HttpErrorResponse) => {\n        console.log(err);\n        alert( err.error.Message);\n      });\n  }\n\n  // Permission for the app to use the device camera\n  onHasPermission(has: boolean): void {\n    this.hasPermission = has;\n  }\n\n\n\n  clearMessage() {\n    setTimeout(() => {\n      this.guestExist = null;\n    }, 3000);\n  }\n\n\n}\n","\n<div class=\"qr-scan-area\">\n  <!-- This is the npm package in-charge of scanning the QR -->\n  <zxing-scanner\n    #scanner\n    [(device)]=\"currentDevice\"\n    (scanSuccess)=\"onCodeResult($event)\"\n    (permissionResponse)=\"onHasPermission($event)\"\n  ></zxing-scanner>\n  <div class=\"qr-area\">\n    <div class=\"area\"></div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { Employee } from 'src/app/models/employee';\nimport { EmployeeService } from 'src/app/services/employee.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n// import { from } from 'rxjs';\n\n\n@Component({\n  selector: 'app-employee-add',\n  templateUrl: './employee-add.component.html',\n  styleUrls: ['./employee-add.component.css']\n})\nexport class EmployeeAddComponent implements OnInit {\n  tittle = \"Employeee Insert\";\n  angForm: any;\n  routeValue: number;\n  buttonText = \"Insert\";\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private employeeService: EmployeeService) {\n\n  }\n  ngOnInit() {\n    this.createFrom();\n    this.routeValue = this.route.snapshot.params.id;\n    console.log(\"param : \", this.route.snapshot.params.id);\n    if (this.routeValue != null) {\n      this.buttonText = \"Update\";\n      this.getEmployee(this.routeValue);\n    }\n  }\n\n  createFrom() {\n    // can controll validation fron component also\n    this.angForm = this.fb.group({\n      id: Number,\n      name: [\"\", Validators.required],\n      gender: [\"\", Validators.required],\n      dob: [],\n      country: [\"\", Validators.required],\n      city: [\"\", Validators.required],\n      image: [\"\"],\n      isActive: [\"\"]\n\n    });\n  }\n\n  onFormSubmit() {\n\n    this.CreateEmployee(this.angForm.value);\n\n  }\n\n  CreateEmployee(employee: Employee) {\n    alert(\"cliceked!\");\n    if (this.routeValue != null) {  // update\n      this.employeeService.updateEmployee(employee).subscribe(\n        (result) => {\n          console.log(\"result:\", result);\n          alert(\"updated successfully!\");\n          // this.angForm.reset();\n        }\n      );\n    } else { // Insert\n\n      alert(\"Insert\");\n      console.log(employee);\n      this.employeeService.createEmployee(employee).subscribe(\n        (result) => {\n          console.log(\"result:\", result);\n          this.router.navigate(['/employee/edit/', result.id]);\n          alert(\"added successfully!\");\n          this.angForm.reset();\n        }\n      );\n    }\n\n  }\n\n  getEmployee(id: number) {\n    console.log(\"get ID: \", id);\n    this.employeeService.getEmployeeById(id).subscribe(\n      (result) => {\n        console.log(result);\n        this.angForm.setValue(result);\n      }\n    );\n  }\n\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <form [formGroup]=\"angForm\" novalidate>\n      <div class=\"form-group\">\n        <label class=\"col-md-4\">Name</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"name\" #name />\n      </div>\n      <div *ngIf=\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\"\n        class=\"alert alert-danger\">\n        <div *ngIf=\"angForm.controls['name'].errors.required\">\n          Name is required.\n        </div>\n      </div>\n\n\n\n      <div class=\"form-group\">\n          <label class=\"col-md-4\">gender</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"gender\" #gender />\n        </div>\n        <div *ngIf=\"angForm.controls['gender'].invalid && (angForm.controls['gender'].dirty || angForm.controls['gender'].touched)\" class=\"alert alert-danger\">\n          <div *ngIf=\"angForm.controls['gender'].errors.required\">\n              gender is required.\n          </div>\n        </div>\n\n\n         <div class=\"form-group\">\n            <label class=\"col-md-4\">dob</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"dob\" #dob />\n          </div>\n           <div *ngIf=\"angForm.controls['dob'].invalid && (angForm.controls['dob'].dirty || angForm.controls['dob'].touched)\"\n            class=\"alert alert-danger\">\n            <div *ngIf=\"angForm.controls['dob'].errors.required\">\n                dob is required.\n            </div>\n          </div>\n\n\n\n\n      <div class=\"form-group\">\n        <label class=\"col-md-4\">country </label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"country\" #country />\n      </div>\n      <div\n        *ngIf=\"angForm.controls['country'].invalid && (angForm.controls['country'].dirty || angForm.controls['country'].touched)\"\n        class=\"alert alert-danger\">\n        <div *ngIf=\"angForm.controls['country'].errors.required\">\n            country is required.\n        </div>\n      </div>\n\n\n\n      <div class=\"form-group\">\n          <label class=\"col-md-4\">city</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"city\" #city />\n        </div>\n        <div *ngIf=\"angForm.controls['city'].invalid && (angForm.controls['city'].dirty || angForm.controls['city'].touched)\"\n          class=\"alert alert-danger\">\n          <div *ngIf=\"angForm.controls['city'].errors.required\">\n              city is required.\n          </div>\n        </div>\n\n\n\n\n      <div class=\"form-group\">\n        <button type=\"submit\" (click)=\"onFormSubmit()\" [disabled]=\"angForm.pristine || angForm.invalid\" class=\"btn btn-primary\">  {{ buttonText }}</button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { from } from 'rxjs';\nimport { Employee } from 'src/app/models/employee';\nimport { EmployeeService } from './../../../services/employee.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n\n  employeeList: any;\n\n  constructor(private router: Router, private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.employeeService.getAllEmployeeList().subscribe(\n      (result) => {\n        console.log(\"list data: \", result);\n        this.employeeList = result;\n      }\n\n    );\n  }\n  addUser(): void {\n    this.router.navigate(['employee/add']);\n  }\n  editUser(employee: Employee) {\n    console.log(\"edit employee:\", employee);\n  }\n  deleteUser(employee: Employee) {\n\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.value) {\n\n        this.employeeService.deleteEmployeeById(employee.id)\n          .subscribe(data => {\n            this.employeeList = this.employeeList.filter(u => u !== employee);\n          });\n      }\n    });\n\n\n    // if (confirm(\"Are you sure?\")) {\n    //   this.employeeService.deleteEmployeeById(employee.id)\n    //     .subscribe(data => {\n    //       this.employeeList = this.employeeList.filter(u => u !== employee);\n    //     });\n    // }\n\n  }\n}\n","<button class=\"btn btn-success\" (click)=\"addUser()\"> Add Employee</button>\n<a [routerLink]=\"['/employee/add']\" > new </a>\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Genger</th>\n      <th>Country</th>\n      <th>City</th>\n      <th>Date of Birth</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let value of employeeList\">\n      <td>{{ value.name }}</td>\n      <td>{{ value.gender }}</td>\n      <td>{{ value.country }}</td>\n      <td>{{ value.city }}</td>\n      <td>{{ value.dob }}</td>\n      <td>\n          <a [routerLink]=\"['/employee/edit', value.id]\" class=\"btn btn-primary\">Edit</a>\n     |\n        <button class=\"btn btn-danger\" (click)=\"deleteUser(value)\">Delete</button>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","\n    <div class=\"content content-fixed content-auth-alt\">\n      <div class=\"container ht-100p tx-center\">\n        <div class=\"ht-100p d-flex flex-column align-items-center justify-content-center\">\n          <div class=\"wd-70p wd-sm-250 wd-lg-300 mg-b-15\"><img src=\"/assets/theme/assets/img/img19.png\" class=\"img-fluid\" alt=\"\"></div>\n          <h1 class=\"tx-color-01 tx-24 tx-sm-32 tx-lg-36 mg-xl-b-5\">404 Page Not Found</h1>\n          <h5 class=\"tx-16 tx-sm-18 tx-lg-20 tx-normal mg-b-20\">Oopps. The page you were looking for doesn't exist.</h5>\n          <p class=\"tx-color-03 mg-b-30\">You may have mistyped the address or the page may have moved. Try searching below.</p>\n          <div class=\"d-flex mg-b-40\">\n            <input type=\"text\" class=\"form-control wd-200 wd-sm-250\" placeholder=\"Search\">\n            <button class=\"btn btn-brand-02 bd-0 mg-l-5 pd-sm-x-25\">Search</button>\n          </div>\n          <span class=\"tx-12 tx-color-03\">Error page concept with laptop vector is created by <a href=\"https://www.freepik.com/free-photos-vectors/business\">freepik (freepik.com)</a></span>\n\n        </div>\n      </div><!-- container -->\n    </div><!-- content -->\n","import { AccountService } from './../services/account.service';\nimport { Component, OnInit } from '@angular/core';\nimport { SlimLoadingBarService } from \"ng2-slim-loading-bar\";\nimport { Location } from '@angular/common';\nimport { from } from 'rxjs';\nimport { NavigationCancel, Event, NavigationEnd, NavigationError, NavigationStart, Route, Router } from \"@angular/router\";\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { stringify } from 'querystring';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  previousUrl: string;\n  title = \"votechainxui-u\";\n  username = \"\";\n  fullMenu = true;\n  historyMenu = true;\n  profileMenu = true;\n  /**\n   *\n   */\n  // tslint:disable-next-line:variable-name\n  constructor(private location: Location,\n    private _loadingBar: SlimLoadingBarService,\n     private _router: Router) {\n    this._router.events.subscribe((event: Event) => {\n       this.navigationInterceptor(event);\n    });\n  }\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this.username = localStorage.getItem(\"userName\");\n      if (this.username === null) {\n        this.fullMenu = false;\n      }\n      else\n      {\n        this.fullMenu = true;\n      }\n      let _url = event.url;\n      console.log(\"route:\", _url);\n      if (_url === \"/login/private\" || _url === \"/\")\n      {\n        this.historyMenu = false;\n        this.profileMenu = false;\n      }\n     else if (_url === \"/scanner\")\n      {\n        this.fullMenu = true;\n        this.historyMenu = true;\n        this.profileMenu = false;\n      }\n      else if (_url.includes(\"/elections/detail\"))\n      {\n        this.fullMenu = true;\n        this.historyMenu = true;\n        this.profileMenu = true;\n      }\n      else\n      {\n        this.fullMenu = true;\n        this.historyMenu = false;\n        this.profileMenu = true;\n      }\n      this._loadingBar.start();\n    }\n    if (event instanceof NavigationEnd) {\n      this.previousUrl = event.url;\n      this._loadingBar.complete();\n    }\n    if (event instanceof NavigationCancel) {\n      this._loadingBar.stop();\n    }\n    if (event instanceof NavigationError) {\n      this._loadingBar.stop();\n    }\n  }\n\n  logout() {\n    localStorage.clear();\n    this._router.navigate(['/login/private']);\n  }\n\n\n  goBackPage() {\n    if (window.history.length > 1) {\n      this.location.back();\n    } else {\n      this._router.navigate(['/']);\n    }\n  }\n}\n","<ng2-slim-loading-bar color=\"blue\"></ng2-slim-loading-bar>\n\n\n\n<header [hidden]=\"!fullMenu\" class=\"navbar navbar-header navbar-header-fixed\">\n  <a [hidden]=\"historyMenu\" href=\"#\" id=\"mainMenuOpen\" class=\"burger-menu\"><i data-feather=\"menu\"></i></a>\n  <a [routerLink]=\"\" (click)=\"goBackPage()\" [hidden]=\"!historyMenu\" href=\"#\" id=\"filemgrMenu\" class=\"burger-menu d-lg-none\"><i data-feather=\"arrow-left\"></i></a>\n  <div class=\"navbar-brand\">\n    <a routerLink=\"/\" class=\"df-logo\">Vote<span>chain</span></a>\n  </div><!-- navbar-brand -->\n  <div [hidden]=\"!profileMenu\" id=\"profileMenu\" class=\"navbar-menu-wrapper\">\n    <div class=\"navbar-menu-header\">\n      <a href=\"/assets/theme/index-2.html\" class=\"df-logo\">Vote<span>chain</span></a>\n      <a id=\"mainMenuClose\" href=\"#\"><i data-feather=\"x\"></i></a>\n    </div>\n\n    <!-- navbar-menu-header -->\n    <ul class=\"nav navbar-menu\">\n      <li class=\"nav-label pd-l-20 pd-lg-l-25 d-lg-none\">Main Navigation</li>\n\n      <!-- <li class=\"nav-item\"><a href=\"/assets/theme/components/index.html\" class=\"nav-link\"><i data-feather=\"box\"></i> Components</a></li>\n      <li class=\"nav-item\"><a href=\"/assets/theme/collections/index.html\" class=\"nav-link\"><i data-feather=\"archive\"></i> Collections</a></li> -->\n    </ul>\n  </div><!-- navbar-menu-wrapper -->\n  <div [hidden]=\"!profileMenu\" class=\"navbar-right\">\n\n    <!-- dropdown -->\n    <div class=\"dropdown dropdown-profile\">\n      <a href=\"#\" class=\"dropdown-link\" data-toggle=\"dropdown\" data-display=\"static\">\n        <div class=\"avatar avatar-sm\"><img src=\"/assets/theme/assets/img/img1.png\" class=\"rounded-circle\" alt=\"\"></div>\n      </a><!-- dropdown-link -->\n      <div class=\"dropdown-menu dropdown-menu-right tx-13\">\n        <div class=\"avatar avatar-lg mg-b-15\"><img src=\"/assets/theme/assets/img/img1.png\" class=\"rounded-circle\" alt=\"\"></div>\n        <h6 class=\"tx-semibold mg-b-5\"> {{username}}</h6>\n        <!-- <p class=\"mg-b-25 tx-12 tx-color-03\">Administrator</p>\n\n        <a href=\"#\" class=\"dropdown-item\"><i data-feather=\"edit-3\"></i> Edit Profile</a>\n        <a href=\"#\" class=\"dropdown-item\"><i data-feather=\"user\"></i> View Profile</a>\n        <div class=\"dropdown-divider\"></div>\n        <a href=\"#\" class=\"dropdown-item\"><i data-feather=\"help-circle\"></i> Help Center</a> -->\n\n        <a routerLink=\"login\" class=\"dropdown-item\" (click)=\"logout()\"><i data-feather=\"log-out\"></i>Sign Out</a>\n      </div><!-- dropdown-menu -->\n    </div><!-- dropdown -->\n  </div><!-- navbar-right -->\n</header><!-- navbar -->\n\n<!-- </div> -->\n  <router-outlet></router-outlet>\n\n\n","import { ScannerComponent } from './Components/Security/scanner/scanner.component';\nimport { ElectionDetailComponent } from './Components/Client/election-detail/election-detail.component';\nimport { CandidatesComponent } from './Components/Client/candidates/candidates.component';\nimport { ElectionsComponent } from './Components/Client/elections/elections.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { LoginComponent } from './Components/Security/login/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { from } from 'rxjs';\nimport { EmployeeAddComponent } from './Components/employees/employee-add/employee-add.component';\nimport { EmployeeListComponent } from './Components/employees/employee-list/employee-list.component';\nimport { PageNotFoundComponent } from './Components/page-not-found/page-not-found.component';\nimport { LoginPrivateComponent } from './Components/Security/login-private/login-private.component';\n\nconst routes: Routes = [\n  { path: \"scanner\", component: ScannerComponent },\n  { path: \"login\", component: LoginComponent },\n  { path: \"login/private\", component: LoginPrivateComponent },\n  { path: \"elections\", component: ElectionsComponent, canActivate: [AuthGuard] },\n  { path: \"elections/detail/:id\", component: ElectionDetailComponent, canActivate: [AuthGuard] },\n  { path: \"candidates/:id\", component: CandidatesComponent },\n  { path: \"\", redirectTo: \"elections\", pathMatch: \"full\" },\n  { path: \"**\", component: PageNotFoundComponent }\n  // ,\n  //   {\n  //     path: \"employee/add\",\n  //     component: EmployeeAddComponent, canActivate: [AuthGuard]\n  //   },\n  //   {\n  //     path: \"employee/edit/:id\",\n  //     component: EmployeeAddComponent, canActivate: [AuthGuard]\n  //   },\n  //   {\n  //     path: \"employee/list\",\n  //     component: EmployeeListComponent, canActivate: [AuthGuard]\n  //   },\n  //   {\n  //     path: \"\",\n  //     redirectTo: \"employee/add\", canActivate: [AuthGuard],\n  //     pathMatch: \"full\"\n  //   },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { PrivateAccountService } from './services/private-account.service';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SlimLoadingBarModule } from \"ng2-slim-loading-bar\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { EmployeeService } from \"./services/employee.service\";\nimport { ElectionsService } from \"./services/elections.service\";\nimport { EmployeeAddComponent } from './Components/employees/employee-add/employee-add.component';\nimport { EmployeeListComponent } from './Components/employees/employee-list/employee-list.component';\nimport { PageNotFoundComponent } from './Components/page-not-found/page-not-found.component';\nimport { AppComponent } from './Shared/app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoginComponent } from './Components/Security/login/login.component';\nimport { RegistrationComponent } from './Components/Security/registration/registration.component';\n// import { AuthGuard } from './auth/auth.guard';\n\nimport { LoginPrivateComponent } from './Components/Security/login-private/login-private.component';\nimport { ElectionsComponent } from './Components/Client/elections/elections.component';\nimport { CandidatesComponent } from './Components/Client/candidates/candidates.component';\nimport { ElectionDetailComponent } from './Components/Client/election-detail/election-detail.component';\n\n// the scanner!\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\nimport { ScannerComponent } from './Components/Security/scanner/scanner.component';\n\n\n@NgModule({\n  declarations: [\n    EmployeeAddComponent,\n    EmployeeListComponent,\n    PageNotFoundComponent,\n    AppComponent,\n    LoginComponent,\n    RegistrationComponent,\n    LoginPrivateComponent,\n    ElectionsComponent,\n    CandidatesComponent,\n    ElectionDetailComponent,\n    ScannerComponent\n  ],\n  imports: [\n    ZXingScannerModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    SlimLoadingBarModule,\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [\n    //  AuthGuard,\n    PrivateAccountService,\n    ElectionsService,\n    {\n       provide: HTTP_INTERCEPTORS,\n       useClass: AuthInterceptor,\n       multi: true\n    }\n    // EmployeeService,\n    // {\n    //   provide: HTTP_INTERCEPTORS,\n    //   useClass: AuthInterceptor,\n    //   multi: true\n    // }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// https://appdividend.com/2018/11/04/angular-7-crud-example-mean-stack-tutorial/\n","import { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      if (localStorage.getItem(\"userPublicKey\") != null){\n        return true;\n      }\n      else {\n         this.router.navigate(['/login/private']);\n      }\n      return false;\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpUserEvent, HttpEvent } from \"@angular/common/http\";\nimport { Observable } from \"rxjs/Observable\";\nimport 'rxjs/add/operator/do';\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (req.headers.get('No-Auth') === \"True\") {\n      return next.handle(req.clone());\n    }\n    if (localStorage.getItem('userPublicKey') != null) {\n\n      const clonedreq = req.clone({\n        headers: req.headers\n          .set('Content-Type', 'application/json')\n          .set(\"PublicKey\", localStorage.getItem('userPublicKey'))\n          .set('PrivateKey', localStorage.getItem('userPrivateKey'))\n\n      });\n      return next.handle(clonedreq)\n        .do(\n          succ => { },\n          err => {\n            console.log(\"Auth-inter : \", err);\n            if (err.status === 401) {\n              this.router.navigateByUrl('/login/private');\n            }\n          }\n        );\n    } else {\n      this.router.navigateByUrl('/login/private');\n    }\n  }\n}\n","\nexport const baseUrl = \"https://votechainx.azurewebsites.net\";\nexport const _baseUrl = \"https://localhost:5005\";\n","export class LoginPrivate {\n  privateKey: string;\n\n  constructor(privateKey: string) {\n    this.privateKey = privateKey;\n  }\n}\n","\nexport class Vote {\n  electionAddress: string;\n  candidate: string;\n  /**\n   *\n   */\n  constructor(electionAddress: string, candidate: string) {\n    this.candidate = candidate;\n    this.electionAddress = electionAddress;\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '../models/user';\nimport { baseUrl } from '../models/config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n\n\n  constructor(private http: HttpClient) { }\n\n  signInAccount(user: User) {\n    // var requestHeader = new HttpHeaders({'No-Auth': 'True'});\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json', 'No-Auth': 'True'}) };\n    return this.http.post<User>(baseUrl + '/sign-in', user, httpOptions);\n  }\n  signoutAccount() {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.post<\"\">(baseUrl + '/tokens/cancel', httpOptions);\n  }\n}\n","import { Vote } from './../models/vote';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { baseUrl } from '../models/config';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ElectionsService {\n  constructor(private http: HttpClient) { }\n  getAllElectionList() {\n    return this.http.get(baseUrl + '/api/wallet/Election/GetElectionList');\n  }\n  getElectionDetails(electionAddress: string) {\n    return this.http.get(baseUrl + '/api/wallet/Election/GetElectionDetailsByAddress?electionAddress=' + electionAddress);\n  }\n  userVote(vote: Vote) {\n    return this.http.post<Vote>(baseUrl + '/api/wallet/Election/UserVote', vote);\n  }\n}\n\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { from } from 'rxjs';\nimport { Employee } from '../models/employee';\nimport { HttpHeaders } from '@angular/common/http';\nimport { baseUrl } from '../models/config';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EmployeeService {\n  constructor(private http: HttpClient) { }\n\n  createEmployee(employee: Employee) {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.post<Employee>(baseUrl + '/api/employees', employee, httpOptions);\n  }\n\n  updateEmployee(employee: Employee) {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.put<Employee>(baseUrl + '/api/employees/' + employee.id, employee, httpOptions);\n  }\n  getAllEmployeeList() {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.get(baseUrl + '/api/employees', httpOptions);\n  }\n\n  getEmployeeById( id: number) {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.get(baseUrl + '/api/employees/' + id, httpOptions);\n  }\n\n  deleteEmployeeById( id: number) {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.delete(baseUrl + '/api/employees/' + id, httpOptions);\n  }\n}\n\n","import { LoginPrivate } from './../models/login-private';\n\n\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '../models/user';\nimport { baseUrl } from '../models/config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrivateAccountService {\n\n  constructor(private http: HttpClient) { }\n\n  signInAccount(user: LoginPrivate) {\n    const httpOptions = { headers: new HttpHeaders({'No-Auth': 'True' }) };\n    return this.http.get(baseUrl + '/api/wallet/Profile/GetPublicKeyUser?privateKey=' + user.privateKey, httpOptions);\n  }\n  signoutAccount() {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n    return this.http.post<\"\">(baseUrl + '/tokens/cancel', httpOptions);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}