{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Auth/auth.guard.ts","./src/app/Components/Client/candidates/candidates.component.ts","./src/app/Components/Client/candidates/candidates.component.html","./src/app/Components/Client/elections/elections.component.ts","./src/app/Components/Client/elections/elections.component.html","./src/app/Components/Security/login-private/login-private.component.ts","./src/app/Components/Security/login-private/login-private.component.html","./src/app/Components/Security/login/login.component.ts","./src/app/Components/Security/login/login.component.html","./src/app/Components/Security/registration/registration.component.ts","./src/app/Components/Security/registration/registration.component.html","./src/app/Components/employees/employee-add/employee-add.component.ts","./src/app/Components/employees/employee-add/employee-add.component.html","./src/app/Components/employees/employee-list/employee-list.component.ts","./src/app/Components/employees/employee-list/employee-list.component.html","./src/app/Components/page-not-found/page-not-found.component.ts","./src/app/Components/page-not-found/page-not-found.component.html","./src/app/Shared/app.component.ts","./src/app/Shared/app.component.html","./src/app/app-routing.module.ts","./src/app/app.module.ts","./src/app/auth/auth.interceptor.ts","./src/app/models/config.ts","./src/app/services/account.service.ts","./src/app/services/employee.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router : Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      if (localStorage.getItem(\"userAccessToken\") != null){\n        return true;\n      }\n      else {\n        this.router.navigate(['/login']);\n      }\n      return false;\n  }\n}\n\n\n// localStorage.getItem(\"userAccessToken\")\n// localStorage.getItem(\"userRefreshToken\")\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-candidates',\n  templateUrl: './candidates.component.html',\n  styleUrls: ['./candidates.component.css']\n})\nexport class CandidatesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  candidates works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-elections',\n  templateUrl: './elections.component.html',\n  styleUrls: ['./elections.component.css']\n})\nexport class ElectionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  elections works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-private',\n  templateUrl: './login-private.component.html',\n  styleUrls: ['./login-private.component.css']\n})\nexport class LoginPrivateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  login-private works!\n</p>\n","import { User } from './../../../models/user';\nimport { Validators } from '@angular/forms';\nimport { AccountService } from './../../../services/account.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  angForm: any;\n  message: string;\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private accountService: AccountService) { }\n\n  ngOnInit() {\n    this.createFrom();\n  }\n\n  createFrom() {\n    this.angForm = this.fb.group({\n      username: [\"\", Validators.required],\n      password: [\"\", Validators.required]\n    });\n  }\n  onFormSubmit() {\n\n     this.LoginUserAccount(this.angForm.value);\n\n  }\n\n  LoginUserAccount(user: User) {\n    this.accountService.signInAccount(user).subscribe(\n      (result: any) => {\n          console.log(\"login\");\n          localStorage.setItem('userAccessToken', result.accessToken);\n          localStorage.setItem('userRefreshToken', result.refreshToken);\n          this.router.navigate(['/employee/list']);\n      },\n      (err: HttpErrorResponse ) => {\n        console.log(err.error.message);\n        this.message = err.error.message;\n      });\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n      <form [formGroup]=\"angForm\" novalidate>\n        <div class=\"form-group\">\n          <label class=\"col-md-4\">username</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"username\" #username />\n        </div>\n        <div *ngIf=\"angForm.controls['username'].invalid && (angForm.controls['username'].dirty || angForm.controls['username'].touched)\"\n          class=\"alert alert-danger\">\n          <div *ngIf=\"angForm.controls['username'].errors.required\">\n              username is required.\n          </div>\n        </div>\n\n\n        <div class=\"form-group\">\n            <label class=\"col-md-4\">password</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"password\" #password />\n          </div>\n          <div *ngIf=\"angForm.controls['password'].invalid && (angForm.controls['password'].dirty || angForm.controls['password'].touched)\"\n            class=\"alert alert-danger\">\n            <div *ngIf=\"angForm.controls['password'].errors.required\">\n                password is required.\n            </div>\n          </div>\n\n<div *ngIf=\"message !=null\" class=\"alert alert-danger\">\n    {{message}}\n</div>\n\n        <div class=\"form-group\">\n          <button type=\"submit\" (click)=\"onFormSubmit()\" [disabled]=\"angForm.pristine || angForm.invalid\" class=\"btn btn-primary btn-block\"> Log In</button>\n        </div>\n      </form>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  registration works!\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { Employee } from 'src/app/models/employee';\nimport { EmployeeService } from 'src/app/services/employee.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n// import { from } from 'rxjs';\n\n\n@Component({\n  selector: 'app-employee-add',\n  templateUrl: './employee-add.component.html',\n  styleUrls: ['./employee-add.component.css']\n})\nexport class EmployeeAddComponent implements OnInit {\n  tittle = \"Employeee Insert\";\n  angForm: any;\n  routeValue: number;\n  buttonText = \"Insert\";\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private employeeService: EmployeeService) {\n\n  }\n  ngOnInit() {\n    this.createFrom();\n    this.routeValue = this.route.snapshot.params.id;\n    console.log(\"param : \", this.route.snapshot.params.id);\n    if (this.routeValue != null) {\n      this.buttonText = \"Update\";\n      this.getEmployee(this.routeValue);\n    }\n  }\n\n  createFrom() {\n    // can controll validation fron component also\n    this.angForm = this.fb.group({\n      id: Number,\n      name: [\"\", Validators.required],\n      gender: [\"\", Validators.required],\n      dob: [],\n      country: [\"\", Validators.required],\n      city: [\"\", Validators.required],\n      image: [\"\"],\n      isActive: [\"\"]\n\n    });\n  }\n\n  onFormSubmit() {\n\n    this.CreateEmployee(this.angForm.value);\n\n  }\n\n  CreateEmployee(employee: Employee) {\n    alert(\"cliceked!\");\n    if (this.routeValue != null) {  // update\n      this.employeeService.updateEmployee(employee).subscribe(\n        (result) => {\n          console.log(\"result:\", result);\n          alert(\"updated successfully!\");\n          // this.angForm.reset();\n        }\n      );\n    } else { // Insert\n\n      alert(\"Insert\");\n      console.log(employee);\n      this.employeeService.createEmployee(employee).subscribe(\n        (result) => {\n          console.log(\"result:\", result);\n          this.router.navigate(['/employee/edit/', result.id]);\n          alert(\"added successfully!\");\n          this.angForm.reset();\n        }\n      );\n    }\n\n  }\n\n  getEmployee(id: number) {\n    console.log(\"get ID: \", id);\n    this.employeeService.getEmployeeById(id).subscribe(\n      (result) => {\n        console.log(result);\n        this.angForm.setValue(result);\n      }\n    );\n  }\n\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <form [formGroup]=\"angForm\" novalidate>\n      <div class=\"form-group\">\n        <label class=\"col-md-4\">Name</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"name\" #name />\n      </div>\n      <div *ngIf=\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\"\n        class=\"alert alert-danger\">\n        <div *ngIf=\"angForm.controls['name'].errors.required\">\n          Name is required.\n        </div>\n      </div>\n\n\n\n      <div class=\"form-group\">\n          <label class=\"col-md-4\">gender</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"gender\" #gender />\n        </div>\n        <div *ngIf=\"angForm.controls['gender'].invalid && (angForm.controls['gender'].dirty || angForm.controls['gender'].touched)\" class=\"alert alert-danger\">\n          <div *ngIf=\"angForm.controls['gender'].errors.required\">\n              gender is required.\n          </div>\n        </div>\n\n\n         <div class=\"form-group\">\n            <label class=\"col-md-4\">dob</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"dob\" #dob />\n          </div>\n           <div *ngIf=\"angForm.controls['dob'].invalid && (angForm.controls['dob'].dirty || angForm.controls['dob'].touched)\"\n            class=\"alert alert-danger\">\n            <div *ngIf=\"angForm.controls['dob'].errors.required\">\n                dob is required.\n            </div>\n          </div>\n\n\n\n\n      <div class=\"form-group\">\n        <label class=\"col-md-4\">country </label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"country\" #country />\n      </div>\n      <div\n        *ngIf=\"angForm.controls['country'].invalid && (angForm.controls['country'].dirty || angForm.controls['country'].touched)\"\n        class=\"alert alert-danger\">\n        <div *ngIf=\"angForm.controls['country'].errors.required\">\n            country is required.\n        </div>\n      </div>\n\n\n\n      <div class=\"form-group\">\n          <label class=\"col-md-4\">city</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"city\" #city />\n        </div>\n        <div *ngIf=\"angForm.controls['city'].invalid && (angForm.controls['city'].dirty || angForm.controls['city'].touched)\"\n          class=\"alert alert-danger\">\n          <div *ngIf=\"angForm.controls['city'].errors.required\">\n              city is required.\n          </div>\n        </div>\n\n\n\n\n      <div class=\"form-group\">\n        <button type=\"submit\" (click)=\"onFormSubmit()\" [disabled]=\"angForm.pristine || angForm.invalid\" class=\"btn btn-primary\">  {{ buttonText }}</button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { from } from 'rxjs';\nimport { Employee } from 'src/app/models/employee';\nimport { EmployeeService } from './../../../services/employee.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n\n  employeeList: any;\n\n  constructor(private router: Router, private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.employeeService.getAllEmployeeList().subscribe(\n      (result) => {\n        console.log(\"list data: \", result);\n        this.employeeList = result;\n      }\n\n    );\n  }\n  addUser(): void {\n    this.router.navigate(['employee/add']);\n  }\n  editUser(employee: Employee) {\n    console.log(\"edit employee:\", employee);\n  }\n  deleteUser(employee: Employee) {\n\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.value) {\n\n        this.employeeService.deleteEmployeeById(employee.id)\n          .subscribe(data => {\n            this.employeeList = this.employeeList.filter(u => u !== employee);\n          });\n      }\n    });\n\n\n    // if (confirm(\"Are you sure?\")) {\n    //   this.employeeService.deleteEmployeeById(employee.id)\n    //     .subscribe(data => {\n    //       this.employeeList = this.employeeList.filter(u => u !== employee);\n    //     });\n    // }\n\n  }\n}\n","<button class=\"btn btn-success\" (click)=\"addUser()\"> Add Employee</button>\n<a [routerLink]=\"['/employee/add']\" > new </a>\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Genger</th>\n      <th>Country</th>\n      <th>City</th>\n      <th>Date of Birth</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let value of employeeList\">\n      <td>{{ value.name }}</td>\n      <td>{{ value.gender }}</td>\n      <td>{{ value.country }}</td>\n      <td>{{ value.city }}</td>\n      <td>{{ value.dob }}</td>\n      <td>\n          <a [routerLink]=\"['/employee/edit', value.id]\" class=\"btn btn-primary\">Edit</a>\n     |\n        <button class=\"btn btn-danger\" (click)=\"deleteUser(value)\">Delete</button>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  page-not-found works!\n</p>\n","import { AccountService } from './../services/account.service';\nimport { Component } from '@angular/core';\nimport { SlimLoadingBarService } from \"ng2-slim-loading-bar\";\nimport { from } from 'rxjs';\nimport { NavigationCancel, Event, NavigationEnd, NavigationError, NavigationStart, Route, Router } from \"@angular/router\";\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = \"angularCrud-u\";\n\n  /**\n   *\n   */\n  // tslint:disable-next-line:variable-name\n  constructor(private _loadingBar: SlimLoadingBarService, private _router: Router, private accountService: AccountService) {\n    this._router.events.subscribe((event: Event) => {\n      this.navigationInterceptor(event);\n    });\n  }\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this._loadingBar.start();\n    }\n    if (event instanceof NavigationEnd) {\n      this._loadingBar.complete();\n    }\n    if (event instanceof NavigationCancel) {\n      this._loadingBar.stop();\n    }\n    if (event instanceof NavigationError) {\n      this._loadingBar.stop();\n    }\n  }\n\n  logout() {\n\n    this.accountService.signoutAccount().subscribe(\n      (result: any) => {\n        localStorage.removeItem('userAccessToken');\n        localStorage.removeItem(\"userRefreshToken\");\n        this._router.navigate(['/login']);\n      },\n      (err: HttpErrorResponse) => {\n        console.log(err.error.message);\n        // this.message = err.error.message;\n      });\n  }\n\n}\n","<ng2-slim-loading-bar color=\"blue\"></ng2-slim-loading-bar>\n\n<nav class=\"navbar navbar-expand-sm bg-light\">\n  <div class=\"container-fluid\">\n    <ul class=\"navbar-nav\">\n      <!-- <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a routerLink=\"login\" class=\"nav-link\">\n          login\n        </a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a routerLink=\"login\" class=\"nav-link\" (click)=\"logout()\">\n          LogOut\n        </a>\n      </li>\n\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a routerLink=\"employee/list\" class=\"nav-link\">\n          Employee List\n        </a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a routerLink=\"employee/add\" class=\"nav-link\">\n          New Employee\n        </a>\n      </li> -->\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a routerLink=\"login/private\" class=\"nav-link\">\n          Private Login\n        </a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a routerLink=\"elections\" class=\"nav-link\">\n          elections\n        </a>\n      </li>\n    </ul>\n\n  </div>\n</nav>\n\n<div class=\"container\">\n  <br>\n  <router-outlet></router-outlet>\n</div>\n","import { CandidatesComponent } from './Components/Client/candidates/candidates.component';\nimport { ElectionsComponent } from './Components/Client/elections/elections.component';\nimport { AuthGuard } from './Auth/auth.guard';\nimport { LoginComponent } from './Components/Security/login/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { from } from 'rxjs';\nimport { EmployeeAddComponent } from './Components/employees/employee-add/employee-add.component';\nimport { EmployeeListComponent } from './Components/employees/employee-list/employee-list.component';\nimport { PageNotFoundComponent } from './Components/page-not-found/page-not-found.component';\nimport { LoginPrivateComponent } from './Components/Security/login-private/login-private.component';\n\nconst routes: Routes = [\n  {\n    path: \"login\",\n    component: LoginComponent\n  },\n  {\n    path: \"login/private\",\n    component: LoginPrivateComponent\n  },\n  {\n    path: \"elections\",\n    component: ElectionsComponent\n  },\n  {\n    path: \"candidates/:id\",\n    component: CandidatesComponent\n  },\n    {\n      path: \"employee/add\",\n      component: EmployeeAddComponent, canActivate:[AuthGuard]\n    },\n    {\n      path: \"employee/edit/:id\",\n      component: EmployeeAddComponent, canActivate:[AuthGuard]\n    },\n    {\n      path: \"employee/list\",\n      component: EmployeeListComponent, canActivate:[AuthGuard]\n    },\n    {\n      path: \"\",\n      redirectTo: \"employee/add\", canActivate: [AuthGuard],\n      pathMatch: \"full\"\n    },\n    {\n      path: \"**\",\n      component: PageNotFoundComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { AuthInterceptor } from './auth/auth.interceptor';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SlimLoadingBarModule } from \"ng2-slim-loading-bar\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { EmployeeService } from \"./services/employee.service\";\nimport { EmployeeAddComponent } from './Components/employees/employee-add/employee-add.component';\nimport { EmployeeListComponent } from './Components/employees/employee-list/employee-list.component';\nimport { PageNotFoundComponent } from './Components/page-not-found/page-not-found.component';\nimport { AppComponent } from './Shared/app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoginComponent } from './Components/Security/login/login.component';\nimport { RegistrationComponent } from './Components/Security/registration/registration.component';\nimport { AuthGuard } from './auth/auth.guard';\n\nimport { LoginPrivateComponent } from './Components/Security/login-private/login-private.component';\nimport { ElectionsComponent } from './Components/Client/elections/elections.component';\nimport { CandidatesComponent } from './Components/Client/candidates/candidates.component';\n\n\n@NgModule({\n  declarations: [\n    EmployeeAddComponent,\n    EmployeeListComponent,\n    PageNotFoundComponent,\n    AppComponent,\n    LoginComponent,\n    RegistrationComponent,\n    LoginPrivateComponent,\n    ElectionsComponent,\n    CandidatesComponent\n  ],\n  imports: [\n    HttpClientModule,\n    ReactiveFormsModule,\n    SlimLoadingBarModule,\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [\n    // AuthGuard,\n    EmployeeService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// https://appdividend.com/2018/11/04/angular-7-crud-example-mean-stack-tutorial/\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpUserEvent, HttpEvent } from \"@angular/common/http\";\nimport { Observable } from \"rxjs/Observable\";\nimport 'rxjs/add/operator/do';\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private router: Router) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.headers.get('No-Auth') === \"True\") {\n            return next.handle(req.clone());\n        }\n\n        if (localStorage.getItem('userAccessToken') != null) {\n            const clonedreq = req.clone({\n                headers: req.headers.set(\"Authorization\", \"Bearer \" + localStorage.getItem('userAccessToken'))\n            });\n            return next.handle(clonedreq)\n                .do(\n                succ => { },\n                err => {\n                    if (err.status === 401) {\n                        this.router.navigateByUrl('/login');\n                    }\n                }\n                );\n        } else {\n            this.router.navigateByUrl('/login');\n        }\n    }\n  }\n","\nexport const baseUrl = \"https://localhost:44326\";\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '../models/user';\nimport { baseUrl } from '../models/config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n\n\n  constructor(private http: HttpClient) { }\n\n  signInAccount(user: User) {\n    // var requestHeader = new HttpHeaders({'No-Auth': 'True'});\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json', 'No-Auth': 'True'}) };\n    return this.http.post<User>(baseUrl + '/sign-in', user, httpOptions);\n  }\n  signoutAccount() {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.post<\"\">(baseUrl + '/tokens/cancel', httpOptions);\n  }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { from } from 'rxjs';\nimport { Employee } from '../models/employee';\nimport { HttpHeaders } from '@angular/common/http';\nimport { baseUrl } from '../models/config';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EmployeeService {\n  constructor(private http: HttpClient) { }\n\n  createEmployee(employee: Employee) {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.post<Employee>(baseUrl + '/api/employees', employee, httpOptions);\n  }\n\n  updateEmployee(employee: Employee) {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.put<Employee>(baseUrl + '/api/employees/' + employee.id, employee, httpOptions);\n  }\n  getAllEmployeeList() {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.get(baseUrl + '/api/employees', httpOptions);\n  }\n\n  getEmployeeById( id: number) {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.get(baseUrl + '/api/employees/' + id, httpOptions);\n  }\n\n  deleteEmployeeById( id: number) {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.delete(baseUrl + '/api/employees/' + id, httpOptions);\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}