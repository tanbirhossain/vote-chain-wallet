{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Auth/auth.guard.ts","webpack:///src/app/Components/Client/candidates/candidates.component.ts","webpack:///src/app/Components/Client/candidates/candidates.component.html","webpack:///src/app/Components/Client/election-detail/election-detail.component.ts","webpack:///src/app/Components/Client/election-detail/election-detail.component.html","webpack:///src/app/Components/Client/elections/elections.component.ts","webpack:///src/app/Components/Client/elections/elections.component.html","webpack:///src/app/Components/Security/login-private/login-private.component.html","webpack:///src/app/Components/Security/login-private/login-private.component.ts","webpack:///src/app/Components/Security/login/login.component.ts","webpack:///src/app/Components/Security/login/login.component.html","webpack:///src/app/Components/Security/registration/registration.component.ts","webpack:///src/app/Components/Security/registration/registration.component.html","webpack:///src/app/Components/employees/employee-add/employee-add.component.ts","webpack:///src/app/Components/employees/employee-add/employee-add.component.html","webpack:///src/app/Components/employees/employee-list/employee-list.component.ts","webpack:///src/app/Components/employees/employee-list/employee-list.component.html","webpack:///src/app/Components/page-not-found/page-not-found.component.ts","webpack:///src/app/Components/page-not-found/page-not-found.component.html","webpack:///src/app/Shared/app.component.ts","webpack:///src/app/Shared/app.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.interceptor.ts","webpack:///src/app/models/config.ts","webpack:///src/app/models/device-vm.ts","webpack:///src/app/models/login-private.ts","webpack:///src/app/models/vote.ts","webpack:///src/app/services/account.service.ts","webpack:///src/app/services/elections.service.ts","webpack:///src/app/services/employee.service.ts","webpack:///src/app/services/private-account.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","router","next","state","localStorage","getItem","navigate","providedIn","CandidatesComponent","fb","route","electionsService","routeValue","snapshot","params","console","log","selector","templateUrl","styleUrls","ElectionDetailComponent","location","getEmployee","getElectionDetails","subscribe","result","election","candidateList","candidates","electionAddress","candidateAddress","candidateName","uservote","fire","title","text","type","showCancelButton","confirmButtonColor","cancelButtonColor","showLoaderOnConfirm","confirmButtonText","value","showLoading","userVote","userResult","err","error","Message","window","history","length","back","goBack","ElectionsComponent","getAllElectionList","electionList","items","LoginPrivateComponent","accountService","createFrom","angForm","group","privateKey","required","LoginUserAccount","codeReader","img","document","getElementById","decodeFromImage","__zone_symbol__value","qrcodestring","event","target","files","reader","FileReader","readAsDataURL","onload","url","oImg","createElement","setAttribute","toString","userLoginPrivte","message","user","signInAccount","setItem","publicKey","name","selectedDeviceId","deviceList","getVideoInputDevices","videoInputDevices","deviceId","forEach","element","device","label","deviceLabel","push","alert","onFormSubmit","onSelectFile","Scan","LoginComponent","username","password","accessToken","refreshToken","RegistrationComponent","EmployeeAddComponent","employeeService","tittle","buttonText","Number","gender","dob","country","city","image","isActive","CreateEmployee","employee","updateEmployee","createEmployee","reset","getEmployeeById","setValue","EmployeeListComponent","getAllEmployeeList","employeeList","deleteEmployeeById","data","filter","u","addUser","PageNotFoundComponent","AppComponent","_loadingBar","_router","show","events","start","complete","stop","clear","logout","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthInterceptor","headers","get","handle","clone","clonedreq","set","succ","status","navigateByUrl","_baseUrl","baseUrl","DeviceVM","_deviceId","v","_deviceLabel","LoginPrivate","Vote","candidate","AccountService","http","httpOptions","post","ElectionsService","vote","EmployeeService","put","PrivateAccountService","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      if (localStorage.getItem(\"userPublicKey\") != null){\n        return true;\n      }\n      else {\n         this.router.navigate(['/login/private']);\n      }\n      return false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { Election } from 'src/app/models/election';\nimport { ElectionsService } from 'src/app/services/elections.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-candidates',\n  templateUrl: './candidates.component.html',\n  styleUrls: ['./candidates.component.css']\n})\nexport class CandidatesComponent implements OnInit {\n  election: any;\n  routeValue: number;\n  constructor(private fb: FormBuilder, private route: ActivatedRoute, private router: Router, private electionsService: ElectionsService) {\n  }\n  ngOnInit() {\n    this.routeValue = this.route.snapshot.params.id;\n    console.log(\"param : \", this.route.snapshot.params.id);\n    if (this.routeValue != null) {\n\n      // this.getEmployee(this.routeValue);\n    }\n  }\n  // getEmployee(id: number) {\n  //   console.log(\"get ID: \", id);\n  //   this.electionsService.getElectionDetails(id).subscribe(\n  //     (result: any) => {\n  //       console.log(result);\n  //       this.election = result;\n  //     }\n  //   );\n  // }\n\n}\n","<p>\n  candidates works!\n</p>\n","import { Vote } from './../../../models/vote';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { Election } from 'src/app/models/election';\nimport { ElectionsService } from 'src/app/services/elections.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport Swal from 'sweetalert2';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-election-detail',\n  templateUrl: './election-detail.component.html',\n  styleUrls: ['./election-detail.component.css']\n})\nexport class ElectionDetailComponent implements OnInit {\n  election: any;\n  candidateList: any;\n  routeValue: string;\n\n  constructor(private location: Location, private fb: FormBuilder,\n    private route: ActivatedRoute, private router: Router, private electionsService: ElectionsService) {\n  }\n  ngOnInit() {\n\n    this.routeValue = this.route.snapshot.params.id;\n    console.log(\"param : \", this.route.snapshot.params.id);\n    if (this.routeValue != null) {\n\n      this.getEmployee(this.routeValue);\n    }\n  }\n  getEmployee(id: string) {\n    console.log(\"get ID: \", id);\n    this.electionsService.getElectionDetails(id).subscribe(\n      (result: any) => {\n        console.log(result);\n        this.election = result;\n        this.candidateList = result.candidates;\n      }\n    );\n  }\n\n  userVote(electionAddress: string, candidateAddress: string, candidateName: string) {\n\n    let uservote = new Vote(electionAddress, candidateAddress);\n    console.log(\"VOTE : \", uservote);\n\n    Swal.fire({\n      title: 'Are you sure for ' + candidateName + ' ?',\n      text: \"You can't be able to vote the secound time for this election!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      showLoaderOnConfirm: true,\n      confirmButtonText: 'Yes, Vote it!'\n    }).then((result) => {\n      if (result.value) {\n        Swal.fire('Please wait');\n        Swal.showLoading();\n        this.electionsService.userVote(uservote).subscribe(\n          (userResult: any) => {\n            console.log(\"VoteResult: \", userResult);\n            Swal.fire(\n              'Voted!',\n              'You Voted Successfully.',\n              'success'\n            );\n            this.router.navigate(['/elections']);\n          },\n          (err: HttpErrorResponse) => {\n            console.log(err);\n            Swal.fire('Oops...', err.error.Message, 'error');\n          });\n      }\n    });\n\n  }\n\n  goBack() {\n    if (window.history.length > 1) {\n      this.location.back();\n    } else {\n      this.router.navigate(['/']);\n    }\n  }\n\n\n}\n","\n\n\n<div class=\"content content-fixed bd-b\">\n  <div class=\"container pd-x-0 pd-lg-x-10 pd-xl-x-0\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            Election Information\n            <button class=\"btn btn-light btn-sm float-right my-1\" (click)=\"goBack()\"> &lt; Back</button>\n\n          </div>\n          <div class=\"card-body\">\n            <table\n              class=\"table table-sm table-hover table-responsive-sm table-responsive-md table-responsive-lg table-bordered\">\n              <tbody>\n                <tr>\n\n                  <td style=\"font-weight:bold\">Election Name</td>\n                  <td id=\"electionName\">{{election.name}}</td>\n\n                </tr>\n                <tr>\n\n                  <td style=\"font-weight:bold\">Status</td>\n                  <td id=\"electionStatus\"><span class=\"badge badge-info\">{{election.status}}</span></td>\n\n                </tr>\n                <tr>\n                  <td style=\"font-weight:bold\">Address</td>\n                  <td id=\"electionAddress\">{{election.address}}</td>\n\n                </tr>\n                <tr>\n                  <td style=\"font-weight:bold\">Total Candidates</td>\n                  <td id=\"electionTotalCandidates\"><span\n                      class=\"badge badge-pill badge-primary\">{{election.candidates.length}}</span></td>\n                </tr>\n              </tbody>\n            </table>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div><!-- container -->\n</div><!-- content -->\n\n\n\n\n\n<!--\n<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        Candidate List\n      </div>\n      <div class=\"card-body\">\n        <table\n          class=\"table table-hover table-sm table-responsive-sm table-responsive-md table-responsive-lg table-bordered table-striped\">\n          <thead>\n            <tr>\n              <th>Name</th>\n\n              <th>Address</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let value of candidateList\">\n\n              <td>\n                <button class=\"btn btn-danger\" (click)=\"userVote(election.address,value.candidateAddress)\">Vote</button>\n\n              </td>\n              <td>{{ value.candidateName }}</td>\n              <td>{{ value.candidateAddress }}</td>\n\n            </tr>\n          </tbody>\n\n        </table>\n\n      </div>\n    </div>\n  </div>\n</div> -->\n\n\n\n<div class=\"content content-fixed bd-b\">\n  <div class=\"container pd-x-0 pd-lg-x-10 pd-xl-x-0\">\n    <div class=\"search-form mg-t-20 mg-sm-t-0\">\n      <input type=\"search\" class=\"form-control\" placeholder=\"Search candiadte\">\n      <button class=\"btn\" type=\"button\"><i data-feather=\"search\"></i></button>\n    </div>\n  </div><!-- container -->\n</div><!-- content -->\n\n\n<div class=\"content\">\n  <div class=\"container pd-x-0 pd-lg-x-10 pd-xl-x-0\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <div class=\"row row-xs mg-b-25\">\n\n          <div class=\"col-sm-6 col-md-4 mg-t-10\" *ngFor=\"let value of candidateList\">\n            <div class=\"card card-profile\">\n              <img src=\"/assets/theme/assets/img/img3.jpg\" class=\"card-img-top\" alt=\"\">\n              <div class=\"card-body tx-13\">\n                <div>\n                  <a>\n                    <div class=\"avatar avatar-lg\"><span class=\"avatar-initial rounded-circle bg-dark\"></span></div>\n                  </a>\n                  <h5><a href=\"#\">{{ value.candidateName }}</a></h5>\n\n                  <div class=\"mg-b-25\" style=\"word-break: break-all;\"><span class=\"tx-12 tx-color-03\">{{ value.candidateAddress }}</span></div>\n\n                  <button class=\"btn btn-block btn-primary\" (click)=\"userVote(election.address,value.candidateAddress,value.candidateName)\">Vote</button>\n                </div>\n              </div>\n            </div><!-- card -->\n          </div><!-- col -->\n        </div><!-- row -->\n      </div><!-- col -->\n\n    </div><!-- row -->\n  </div><!-- container -->\n</div><!-- content -->\n","import { ElectionsService } from './../../../services/elections.service';\nimport { from } from 'rxjs';\nimport { Employee } from 'src/app/models/employee';\nimport { EmployeeService } from './../../../services/employee.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-elections',\n  templateUrl: './elections.component.html',\n  styleUrls: ['./elections.component.css']\n})\nexport class ElectionsComponent implements OnInit {\n  electionList: any;\n  constructor(private router: Router, private electionsService: ElectionsService) { }\n\n  ngOnInit() {\n    this.electionsService.getAllElectionList().subscribe(\n      (result: any) => {\n        console.log(\"list data: \", result);\n        this.electionList = result.items;\n      }\n\n    );\n  }\n}\n","<!-- <table class=\"table\">\n  <thead>\n    <tr>\n      <th></th>\n      <th>Id</th>\n      <th>Name</th>\n      <th>Status</th>\n      <th>Total Particapate</th>\n      <th>Address</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let value of electionList\">\n      <td><a [routerLink]=\"['/elections/detail', value.id]\" class=\"\">Detail</a></td>\n      <td>{{ value.id }}</td>\n      <td>{{ value.name }}</td>\n      <td>{{ value.status }}</td>\n      <td>{{ value.candidates.length }}</td>\n      <td>{{ value.address }}</td>\n    </tr>\n  </tbody>\n</table> -->\n\n\n\n\n\n<div class=\"content content-fixed bd-b\">\n  <div class=\"container pd-x-0 pd-lg-x-10 pd-xl-x-0\">\n    <div class=\"search-form mg-t-0 mg-sm-t-0\">\n      <input type=\"search\" class=\"form-control\" placeholder=\"Search election\">\n      <button class=\"btn\" type=\"button\"><i data-feather=\"search\"></i></button>\n    </div>\n  </div><!-- container -->\n</div><!-- content -->\n\n<div class=\"content\">\n  <div class=\"container pd-x-0 pd-lg-x-10 pd-xl-x-0\">\n    <div class=\"row\">\n      <div *ngFor=\"let value of electionList;\" class=\"col-sm-6 col-lg-3 mg-t-20 mg-sm-t-0\">\n        <div class=\"card card-help\">\n          <div class=\"card-body tx-13\">\n            <div class=\"tx-60 lh-0 mg-b-25\"><i class=\"icon ion-ios-cog\"></i></div>\n            <h5><a [routerLink]=\"['/elections/detail', value.address]\" class=\"link-01\">{{ value.name }}</a></h5>\n            <p class=\"tx-color-03 mg-b-0\" style=\"word-break: break-all;\">{{ value.address }}</p>\n          </div><!-- card-body -->\n          <div class=\"card-footer tx-13\" [routerLink]=\"['/elections/detail', value.address]\">\n            <span>{{ value.candidates.length }} Particapates </span>\n            <a [routerLink]=\"['/elections/detail', value.address]\" class=\"tx-18 lh-0\"><i class=\"icon ion-md-arrow-forward\"></i></a>\n          </div><!-- card-footer -->\n        </div><!-- card -->\n      </div><!-- col -->\n\n    </div><!-- row -->\n  </div>\n</div><!-- content -->\n\n","<!-- Begin page content -->\n<!--\n<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <form [formGroup]=\"angForm\" novalidate>\n        <div class=\"form-group\">\n          <label>Private Key</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"privateKey\" #privateKey />\n        </div>\n        <div\n          *ngIf=\"angForm.controls['privateKey'].invalid && (angForm.controls['privateKey'].dirty || angForm.controls['privateKey'].touched)\"\n          class=\"alert alert-danger\">\n          <div *ngIf=\"angForm.controls['privateKey'].errors.required\">\n            Private Key is required.\n          </div>\n        </div>\n        <div *ngIf=\"message !=null\" class=\"alert alert-danger\">\n          {{message}}\n        </div>\n\n      </form>\n    </div>\n    <div class=\"card-footer\">\n      <div class=\"form-group text-center\">\n        <button type=\"submit\" (click)=\"onFormSubmit()\" [disabled]=\"angForm.pristine || angForm.invalid\"\n          class=\"btn btn-primary btn-block\"> Log In</button>\n      </div>\n    </div>\n  </div>\n</div>\n -->\n\n\n\n\n<div class=\"content content-fixed content-auth\">\n  <div class=\"container\">\n    <div class=\"media align-items-stretch justify-content-center ht-100p pos-relative\">\n      <div class=\"media-body align-items-center d-none d-lg-flex\">\n        <div class=\"mx-wd-600\">\n          <img src=\"/assets/theme/assets/img/img15.png\" class=\"img-fluid\" alt=\"\">\n        </div>\n\n      </div>\n      <!-- media-body -->\n      <div class=\"sign-wrapper mg-lg-l-50 mg-xl-l-60\">\n        <div class=\"wd-100p\">\n          <h3 class=\"tx-color-01 mg-b-5\">Sign In</h3>\n          <p class=\"tx-color-03 tx-16 mg-b-40\">Welcome back! Please signin to continue.</p>\n          <form [formGroup]=\"angForm\" novalidate>\n            <div class=\"form-group\">\n              <label>Private Key</label>\n              <input type=\"text\" class=\"form-control\" placeholder=\"Private Key\" formControlName=\"privateKey\"\n                #privateKey />\n            </div>\n            <div\n              *ngIf=\"angForm.controls['privateKey'].invalid && (angForm.controls['privateKey'].dirty || angForm.controls['privateKey'].touched)\"\n              class=\"alert alert-danger\">\n              <div *ngIf=\"angForm.controls['privateKey'].errors.required\">\n                Private Key is required.\n              </div>\n            </div>\n            <div *ngIf=\"message !=null\" class=\"alert alert-danger\">\n              {{message}}\n            </div>\n          </form>\n          <button type=\"submit\" class=\"btn btn-brand-02 btn-block\" (click)=\"onFormSubmit()\"\n            [disabled]=\"angForm.pristine || angForm.invalid\">Sign In</button>\n          <div class=\"divider-text\">or</div>\n          <label class=\"btn btn-outline-facebook btn-block\">\n            <span>Sign In With QRCode Upload</span>\n            <input type='file' (change)=\"onSelectFile($event)\">\n          </label>\n          <!-- <button class=\"btn btn-outline-facebook btn-block\" (click)=\"onQRCodeUpload()\">Sign In With QRCode Upload</button> -->\n          <button class=\"btn btn-outline-twitter btn-block\" (click)=\"Scan()\">Sign In With QR Scan</button>\n          <!-- <div class=\"tx-13 mg-t-20 tx-center\">Don't have an account? <a href=\"page-signup.html\">Create an Account</a></div> -->\n        </div>\n      </div><!-- sign-wrapper -->\n    </div><!-- media -->\n  </div><!-- container -->\n</div><!-- content -->\n\n\n\nQR  <div class=\"alert alert-success\">\n  {{qrcodestring}}\n</div>\n\n\n<div>\n  <a class=\"button\" id=\"startButton\">Start</a>\n  <a class=\"button\" id=\"resetButton\">Reset</a>\n</div>\n\n<div>\n  <video id=\"video\" width=\"300\" height=\"200\" style=\"border: 1px solid gray\"></video>\n</div>\n\n<div id=\"sourceSelectPanel\" style=\"display:none\">\n  <label for=\"sourceSelect\">Change video source:</label>\n  <select id=\"sourceSelect\" style=\"max-width:400px\">\n  </select>\n</div>\n\n<label>Result:</label>\n<pre><code id=\"result\"></code></pre>\n\n","import { DeviceVM } from './../../../models/device-vm';\nimport { element } from 'protractor';\nimport { LoginPrivate } from './../../../models/login-private';\nimport { PrivateAccountService } from './../../../services/private-account.service';\nimport { User } from './../../../models/user';\nimport { Validators } from '@angular/forms';\nimport { AccountService } from './../../../services/account.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BrowserQRCodeReader } from '@zxing/library';\n\n// the scanner!\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\n\ndeclare var require: any;\n@Component({\n  selector: 'app-login-private',\n  templateUrl: './login-private.component.html',\n  styleUrls: ['./login-private.component.css']\n})\n\nexport class LoginPrivateComponent implements OnInit {\n\n  constructor(private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private accountService: PrivateAccountService) { }\n  angForm: any;\n  message: string;\n  qrcodestring: any;\n  qrCodeReader: any;\n  url: any;\n  imgSrc: string;\n\n  //  deviceList: string[];\n\n  ngOnInit() {\n    this.createFrom();\n  }\n\n  createFrom() {\n    this.angForm = this.fb.group({\n      privateKey: [\"\", Validators.required]\n    });\n  }\n  onFormSubmit() {\n    this.LoginUserAccount(this.angForm.value);\n  }\n\n\n  onQRCodeUpload() {\n    // tslint:disable-next-line: deprecation\n    const codeReader = new BrowserQRCodeReader();\n\n    const img = document.getElementById('img') as HTMLImageElement;\n    console.log(\"Img\", img);\n\n    try {\n      let result: any = codeReader.decodeFromImage(img);\n      console.log(\"Retun function\", result);\n      console.log(\"Retun String\", result.__zone_symbol__value.text);\n      this.qrcodestring = result.__zone_symbol__value.text;\n    } catch (err) {\n      console.log(\"QR string Error: \", err);\n    }\n  }\n\n  onSelectFile(event) { // called each time file input changes\n    if (event.target.files && event.target.files[0]) {\n      let reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]); // read file as data url\n      // tslint:disable-next-line:no-shadowed-variable\n      reader.onload = async (event) => { // called once readAsDataURL is completed\n        this.url = event.target.result;\n        // tslint:disable-next-line: deprecation\n        const codeReader = new BrowserQRCodeReader();\n        try {\n          let oImg = document.createElement(\"img\") as HTMLImageElement;\n          oImg.setAttribute('src', event.target.result.toString());\n          let result: any = codeReader.decodeFromImage(oImg);\n          console.log(\"Retun Private Key:  \", await result.__zone_symbol__value.text);\n          console.log(\"Retun function\", await result);\n\n          this.qrcodestring = await result.__zone_symbol__value.text;\n\n          let userLoginPrivte = new LoginPrivate(result.__zone_symbol__value.text);\n          this.LoginUserAccount(userLoginPrivte);\n        } catch (err) {\n          this.message = \"Wronge image uploaded.Please try again.\";\n          console.log(\"QR string Error: \", err);\n        }\n      };\n    }\n  }\n\n  LoginUserAccount(user: LoginPrivate) {\n    console.log(\"loginBefore: \", user.privateKey);\n    this.accountService.signInAccount(user).subscribe(\n      (result: any) => {\n        console.log(\"loginResult: \", result);\n        localStorage.setItem('userPublicKey', result.publicKey);\n        localStorage.setItem('userPrivateKey', user.privateKey);\n        localStorage.setItem('userName', result.name);\n        this.router.navigate(['/elections']);\n      },\n      (err: HttpErrorResponse) => {\n        console.log(err);\n        this.message = err.error.Message;\n      });\n  }\n\n  deviceList: DeviceVM[];\n\n  Scan() {\n    let selectedDeviceId;\n    this.deviceList = [];\n    const codeReader = new BrowserQRCodeReader();\n    console.log('ZXing code reader initialized');\n    // tslint:disable-next-line: deprecation\n    codeReader.getVideoInputDevices()\n      .then((videoInputDevices) => {\n        // const sourceSelect = document.getElementById('sourceSelect')  as HTMLElement;\n        selectedDeviceId = videoInputDevices[0].deviceId;\n        if (videoInputDevices.length >= 1) {\n          videoInputDevices.forEach((element) => {\n            // const sourceOption = document.createElement('option');\n            // sourceOption.text = element.label;\n            // sourceOption.value = element.deviceId;\n            let device = new DeviceVM();\n            device.deviceId = element.label;\n            device.deviceLabel = element.label;\n            this.deviceList.push(device);\n            // sourceSelect.appendChild(sourceOption);\n          });\n\n          // sourceSelect.onchange = () => {\n          //   selectedDeviceId = sourceSelect.value;\n          // };\n\n          // const sourceSelectPanel = document.getElementById('sourceSelectPanel')  as HTMLElement;\n          // sourceSelectPanel.style.display = 'block';\n          alert(\"Device Found\" + videoInputDevices.length);\n        }\n        else {\n          alert(\"No device found\");\n        }\n\n        // document.getElementById('startButton').addEventListener('click', () => {\n        //   codeReader.decodeFromVideoDevice(selectedDeviceId, 'video', (result, err) => {\n        //     if (result) {\n        //       console.log(\"Problem result : \" + result);\n        //       // document.getElementById('result').textContent = result.text;\n        //     }\n        //     // if (err && !(err instanceof codeReader.NotFoundException)) {\n        //     //   console.error(err);\n        //     //   document.getElementById('result').textContent = err;\n        //     // }\n        //   });\n        //   console.log(`Started continous decode from camera with id ${selectedDeviceId}`);\n        // });\n\n        // document.getElementById('resetButton').addEventListener('click', () => {\n        //   codeReader.reset();\n        //   document.getElementById('result').textContent = '';\n        //   console.log('Reset.');\n        // });\n\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n\n\n\n}\n","import { User } from './../../../models/user';\nimport { Validators } from '@angular/forms';\nimport { AccountService } from './../../../services/account.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  angForm: any;\n  message: string;\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private accountService: AccountService) { }\n\n  ngOnInit() {\n    this.createFrom();\n  }\n\n  createFrom() {\n    this.angForm = this.fb.group({\n      username: [\"\", Validators.required],\n      password: [\"\", Validators.required]\n    });\n  }\n  onFormSubmit() {\n\n     this.LoginUserAccount(this.angForm.value);\n\n  }\n\n  LoginUserAccount(user: User) {\n    this.accountService.signInAccount(user).subscribe(\n      (result: any) => {\n          console.log(\"login\");\n          localStorage.setItem('userAccessToken', result.accessToken);\n          localStorage.setItem('userRefreshToken', result.refreshToken);\n          this.router.navigate(['/employee/list']);\n      },\n      (err: HttpErrorResponse ) => {\n        console.log(err.error.message);\n        this.message = err.error.message;\n      });\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n      <form [formGroup]=\"angForm\" novalidate>\n        <div class=\"form-group\">\n          <label class=\"col-md-4\">username</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"username\" #username />\n        </div>\n        <div *ngIf=\"angForm.controls['username'].invalid && (angForm.controls['username'].dirty || angForm.controls['username'].touched)\"\n          class=\"alert alert-danger\">\n          <div *ngIf=\"angForm.controls['username'].errors.required\">\n              username is required.\n          </div>\n        </div>\n\n\n        <div class=\"form-group\">\n            <label class=\"col-md-4\">password</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"password\" #password />\n          </div>\n          <div *ngIf=\"angForm.controls['password'].invalid && (angForm.controls['password'].dirty || angForm.controls['password'].touched)\"\n            class=\"alert alert-danger\">\n            <div *ngIf=\"angForm.controls['password'].errors.required\">\n                password is required.\n            </div>\n          </div>\n\n<div *ngIf=\"message !=null\" class=\"alert alert-danger\">\n    {{message}}\n</div>\n\n        <div class=\"form-group\">\n          <button type=\"submit\" (click)=\"onFormSubmit()\" [disabled]=\"angForm.pristine || angForm.invalid\" class=\"btn btn-primary btn-block\"> Log In</button>\n        </div>\n      </form>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  registration works!\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { Employee } from 'src/app/models/employee';\nimport { EmployeeService } from 'src/app/services/employee.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n// import { from } from 'rxjs';\n\n\n@Component({\n  selector: 'app-employee-add',\n  templateUrl: './employee-add.component.html',\n  styleUrls: ['./employee-add.component.css']\n})\nexport class EmployeeAddComponent implements OnInit {\n  tittle = \"Employeee Insert\";\n  angForm: any;\n  routeValue: number;\n  buttonText = \"Insert\";\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private employeeService: EmployeeService) {\n\n  }\n  ngOnInit() {\n    this.createFrom();\n    this.routeValue = this.route.snapshot.params.id;\n    console.log(\"param : \", this.route.snapshot.params.id);\n    if (this.routeValue != null) {\n      this.buttonText = \"Update\";\n      this.getEmployee(this.routeValue);\n    }\n  }\n\n  createFrom() {\n    // can controll validation fron component also\n    this.angForm = this.fb.group({\n      id: Number,\n      name: [\"\", Validators.required],\n      gender: [\"\", Validators.required],\n      dob: [],\n      country: [\"\", Validators.required],\n      city: [\"\", Validators.required],\n      image: [\"\"],\n      isActive: [\"\"]\n\n    });\n  }\n\n  onFormSubmit() {\n\n    this.CreateEmployee(this.angForm.value);\n\n  }\n\n  CreateEmployee(employee: Employee) {\n    alert(\"cliceked!\");\n    if (this.routeValue != null) {  // update\n      this.employeeService.updateEmployee(employee).subscribe(\n        (result) => {\n          console.log(\"result:\", result);\n          alert(\"updated successfully!\");\n          // this.angForm.reset();\n        }\n      );\n    } else { // Insert\n\n      alert(\"Insert\");\n      console.log(employee);\n      this.employeeService.createEmployee(employee).subscribe(\n        (result) => {\n          console.log(\"result:\", result);\n          this.router.navigate(['/employee/edit/', result.id]);\n          alert(\"added successfully!\");\n          this.angForm.reset();\n        }\n      );\n    }\n\n  }\n\n  getEmployee(id: number) {\n    console.log(\"get ID: \", id);\n    this.employeeService.getEmployeeById(id).subscribe(\n      (result) => {\n        console.log(result);\n        this.angForm.setValue(result);\n      }\n    );\n  }\n\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <form [formGroup]=\"angForm\" novalidate>\n      <div class=\"form-group\">\n        <label class=\"col-md-4\">Name</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"name\" #name />\n      </div>\n      <div *ngIf=\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\"\n        class=\"alert alert-danger\">\n        <div *ngIf=\"angForm.controls['name'].errors.required\">\n          Name is required.\n        </div>\n      </div>\n\n\n\n      <div class=\"form-group\">\n          <label class=\"col-md-4\">gender</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"gender\" #gender />\n        </div>\n        <div *ngIf=\"angForm.controls['gender'].invalid && (angForm.controls['gender'].dirty || angForm.controls['gender'].touched)\" class=\"alert alert-danger\">\n          <div *ngIf=\"angForm.controls['gender'].errors.required\">\n              gender is required.\n          </div>\n        </div>\n\n\n         <div class=\"form-group\">\n            <label class=\"col-md-4\">dob</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"dob\" #dob />\n          </div>\n           <div *ngIf=\"angForm.controls['dob'].invalid && (angForm.controls['dob'].dirty || angForm.controls['dob'].touched)\"\n            class=\"alert alert-danger\">\n            <div *ngIf=\"angForm.controls['dob'].errors.required\">\n                dob is required.\n            </div>\n          </div>\n\n\n\n\n      <div class=\"form-group\">\n        <label class=\"col-md-4\">country </label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"country\" #country />\n      </div>\n      <div\n        *ngIf=\"angForm.controls['country'].invalid && (angForm.controls['country'].dirty || angForm.controls['country'].touched)\"\n        class=\"alert alert-danger\">\n        <div *ngIf=\"angForm.controls['country'].errors.required\">\n            country is required.\n        </div>\n      </div>\n\n\n\n      <div class=\"form-group\">\n          <label class=\"col-md-4\">city</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"city\" #city />\n        </div>\n        <div *ngIf=\"angForm.controls['city'].invalid && (angForm.controls['city'].dirty || angForm.controls['city'].touched)\"\n          class=\"alert alert-danger\">\n          <div *ngIf=\"angForm.controls['city'].errors.required\">\n              city is required.\n          </div>\n        </div>\n\n\n\n\n      <div class=\"form-group\">\n        <button type=\"submit\" (click)=\"onFormSubmit()\" [disabled]=\"angForm.pristine || angForm.invalid\" class=\"btn btn-primary\">  {{ buttonText }}</button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { from } from 'rxjs';\nimport { Employee } from 'src/app/models/employee';\nimport { EmployeeService } from './../../../services/employee.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n\n  employeeList: any;\n\n  constructor(private router: Router, private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.employeeService.getAllEmployeeList().subscribe(\n      (result) => {\n        console.log(\"list data: \", result);\n        this.employeeList = result;\n      }\n\n    );\n  }\n  addUser(): void {\n    this.router.navigate(['employee/add']);\n  }\n  editUser(employee: Employee) {\n    console.log(\"edit employee:\", employee);\n  }\n  deleteUser(employee: Employee) {\n\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.value) {\n\n        this.employeeService.deleteEmployeeById(employee.id)\n          .subscribe(data => {\n            this.employeeList = this.employeeList.filter(u => u !== employee);\n          });\n      }\n    });\n\n\n    // if (confirm(\"Are you sure?\")) {\n    //   this.employeeService.deleteEmployeeById(employee.id)\n    //     .subscribe(data => {\n    //       this.employeeList = this.employeeList.filter(u => u !== employee);\n    //     });\n    // }\n\n  }\n}\n","<button class=\"btn btn-success\" (click)=\"addUser()\"> Add Employee</button>\n<a [routerLink]=\"['/employee/add']\" > new </a>\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Genger</th>\n      <th>Country</th>\n      <th>City</th>\n      <th>Date of Birth</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let value of employeeList\">\n      <td>{{ value.name }}</td>\n      <td>{{ value.gender }}</td>\n      <td>{{ value.country }}</td>\n      <td>{{ value.city }}</td>\n      <td>{{ value.dob }}</td>\n      <td>\n          <a [routerLink]=\"['/employee/edit', value.id]\" class=\"btn btn-primary\">Edit</a>\n     |\n        <button class=\"btn btn-danger\" (click)=\"deleteUser(value)\">Delete</button>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","\n    <div class=\"content content-fixed content-auth-alt\">\n      <div class=\"container ht-100p tx-center\">\n        <div class=\"ht-100p d-flex flex-column align-items-center justify-content-center\">\n          <div class=\"wd-70p wd-sm-250 wd-lg-300 mg-b-15\"><img src=\"/assets/theme/assets/img/img19.png\" class=\"img-fluid\" alt=\"\"></div>\n          <h1 class=\"tx-color-01 tx-24 tx-sm-32 tx-lg-36 mg-xl-b-5\">404 Page Not Found</h1>\n          <h5 class=\"tx-16 tx-sm-18 tx-lg-20 tx-normal mg-b-20\">Oopps. The page you were looking for doesn't exist.</h5>\n          <p class=\"tx-color-03 mg-b-30\">You may have mistyped the address or the page may have moved. Try searching below.</p>\n          <div class=\"d-flex mg-b-40\">\n            <input type=\"text\" class=\"form-control wd-200 wd-sm-250\" placeholder=\"Search\">\n            <button class=\"btn btn-brand-02 bd-0 mg-l-5 pd-sm-x-25\">Search</button>\n          </div>\n          <span class=\"tx-12 tx-color-03\">Error page concept with laptop vector is created by <a href=\"https://www.freepik.com/free-photos-vectors/business\">freepik (freepik.com)</a></span>\n\n        </div>\n      </div><!-- container -->\n    </div><!-- content -->\n","import { AccountService } from './../services/account.service';\nimport { Component } from '@angular/core';\nimport { SlimLoadingBarService } from \"ng2-slim-loading-bar\";\nimport { from } from 'rxjs';\nimport { NavigationCancel, Event, NavigationEnd, NavigationError, NavigationStart, Route, Router } from \"@angular/router\";\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { stringify } from 'querystring';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = \"angularCrud-u\";\n  username = \"\";\n  show = true;\n  /**\n   *\n   */\n  // tslint:disable-next-line:variable-name\n  constructor(private _loadingBar: SlimLoadingBarService, private _router: Router, private accountService: AccountService) {\n\n    this._router.events.subscribe((event: Event) => {\n      this.username = localStorage.getItem(\"userName\");\n      if (this.username != null )\n      {\n        this.show = true;\n      }else  {\n        this.show = false;\n      }\n      // this.navigationInterceptor(event);\n    });\n  }\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this._loadingBar.start();\n    }\n    if (event instanceof NavigationEnd) {\n      this._loadingBar.complete();\n    }\n    if (event instanceof NavigationCancel) {\n      this._loadingBar.stop();\n    }\n    if (event instanceof NavigationError) {\n      this._loadingBar.stop();\n    }\n  }\n\n  logout() {\n    localStorage.clear();\n\n    this._router.navigate(['/login/private']);\n    // this.accountService.signoutAccount().subscribe(\n    //   (result: any) => {\n    //     localStorage.removeItem('userPublicKey');\n    //     localStorage.removeItem(\"userPrivateKey\");\n    //     this._router.navigate(['/login/private']);\n    //   },\n    //   (err: HttpErrorResponse) => {\n    //     console.log(err.error.message);\n    //     // this.message = err.error.message;\n    //   });\n  }\n\n}\n","<ng2-slim-loading-bar color=\"blue\"></ng2-slim-loading-bar>\n\n<!-- <div *ngIf=\"isShow\">\n  <nav class=\"navbar navbar-expand-sm bg-light\">\n    <div class=\"container-fluid\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a routerLink=\"elections\" class=\"nav-link\">\n            elections\n          </a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a routerLink=\"login\" class=\"nav-link\" (click)=\"logout()\">\n            LogOut\n          </a>\n        </li>\n\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          {{username}}\n        </li>\n      </ul>\n    </div>\n  </nav>\n\n</div> -->\n\n<!-- <div *ngIf=\"isShow\"> -->\n\n<header [hidden]=\"!show\" class=\"navbar navbar-header navbar-header-fixed\">\n  <a href=\"#\" id=\"mainMenuOpen\" class=\"burger-menu\"><i data-feather=\"menu\"></i></a>\n  <div class=\"navbar-brand\">\n\n    <a routerLink=\"/\" class=\"df-logo\">Vote<span>chain</span></a>\n  </div><!-- navbar-brand -->\n  <div id=\"navbarMenu\" class=\"navbar-menu-wrapper\">\n    <div class=\"navbar-menu-header\">\n      <a href=\"/assets/theme/index-2.html\" class=\"df-logo\">Vote<span>chain</span></a>\n      <a id=\"mainMenuClose\" href=\"#\"><i data-feather=\"x\"></i></a>\n    </div><!-- navbar-menu-header -->\n    <ul class=\"nav navbar-menu\">\n      <li class=\"nav-label pd-l-20 pd-lg-l-25 d-lg-none\">Main Navigation</li>\n\n      <li class=\"nav-item\"><a href=\"/assets/theme/components/index.html\" class=\"nav-link\"><i data-feather=\"box\"></i> Components</a></li>\n      <li class=\"nav-item\"><a href=\"/assets/theme/collections/index.html\" class=\"nav-link\"><i data-feather=\"archive\"></i> Collections</a></li>\n    </ul>\n  </div><!-- navbar-menu-wrapper -->\n  <div class=\"navbar-right\">\n    <div class=\"dropdown dropdown-message\">\n      <a href=\"#\" class=\"dropdown-link new-indicator\" data-toggle=\"dropdown\">\n        <i data-feather=\"message-square\"></i>\n        <span>5</span>\n      </a>\n      <div class=\"dropdown-menu dropdown-menu-right\">\n        <div class=\"dropdown-header\">New Messages</div>\n        <a href=\"#\" class=\"dropdown-item\">\n          <div class=\"media\">\n            <div class=\"avatar avatar-sm avatar-online\"><img src=\"/assets/theme/assets/img/img6.jpg\" class=\"rounded-circle\" alt=\"\"></div>\n            <div class=\"media-body mg-l-15\">\n              <strong>Socrates Itumay</strong>\n              <p>nam libero tempore cum so...</p>\n              <span>Mar 15 12:32pm</span>\n            </div><!-- media-body -->\n          </div><!-- media -->\n        </a>\n        <a href=\"#\" class=\"dropdown-item\">\n          <div class=\"media\">\n            <div class=\"avatar avatar-sm avatar-online\"><img src=\"/assets/theme/assets/img/img8.jpg\" class=\"rounded-circle\" alt=\"\"></div>\n            <div class=\"media-body mg-l-15\">\n              <strong>Joyce Chua</strong>\n              <p>on the other hand we denounce...</p>\n              <span>Mar 13 04:16am</span>\n            </div><!-- media-body -->\n          </div><!-- media -->\n        </a>\n        <a href=\"#\" class=\"dropdown-item\">\n          <div class=\"media\">\n            <div class=\"avatar avatar-sm avatar-online\"><img src=\"/assets/theme/assets/img/img7.jpg\" class=\"rounded-circle\" alt=\"\"></div>\n            <div class=\"media-body mg-l-15\">\n              <strong>Althea Cabardo</strong>\n              <p>is there anyone who loves...</p>\n              <span>Mar 13 02:56am</span>\n            </div><!-- media-body -->\n          </div><!-- media -->\n        </a>\n        <a href=\"#\" class=\"dropdown-item\">\n          <div class=\"media\">\n            <div class=\"avatar avatar-sm avatar-online\"><img src=\"/assets/theme/assets/img/img9.jpg\" class=\"rounded-circle\" alt=\"\"></div>\n            <div class=\"media-body mg-l-15\">\n              <strong>Adrian Monino</strong>\n              <p>duis aute irure dolor in repre...</p>\n              <span>Mar 12 10:40pm</span>\n            </div><!-- media-body -->\n          </div><!-- media -->\n        </a>\n        <div class=\"dropdown-footer\"><a href=\"#\">View all Messages</a></div>\n      </div><!-- dropdown-menu -->\n    </div><!-- dropdown -->\n    <div class=\"dropdown dropdown-notification\">\n      <a href=\"#\" class=\"dropdown-link new-indicator\" data-toggle=\"dropdown\">\n        <i data-feather=\"bell\"></i>\n        <span>2</span>\n      </a>\n      <div class=\"dropdown-menu dropdown-menu-right\">\n        <div class=\"dropdown-header\">Notifications</div>\n        <a href=\"#\" class=\"dropdown-item\">\n          <div class=\"media\">\n            <div class=\"avatar avatar-sm avatar-online\"><img src=\"/assets/theme/assets/img/img6.jpg\" class=\"rounded-circle\" alt=\"\"></div>\n            <div class=\"media-body mg-l-15\">\n              <p>Congratulate <strong>Socrates Itumay</strong> for work anniversaries</p>\n              <span>Mar 15 12:32pm</span>\n            </div><!-- media-body -->\n          </div><!-- media -->\n        </a>\n        <a href=\"#\" class=\"dropdown-item\">\n          <div class=\"media\">\n            <div class=\"avatar avatar-sm avatar-online\"><img src=\"/assets/theme/assets/img/img8.jpg\" class=\"rounded-circle\" alt=\"\"></div>\n            <div class=\"media-body mg-l-15\">\n              <p><strong>Joyce Chua</strong> just created a new blog post</p>\n              <span>Mar 13 04:16am</span>\n            </div><!-- media-body -->\n          </div><!-- media -->\n        </a>\n        <a href=\"#\" class=\"dropdown-item\">\n          <div class=\"media\">\n            <div class=\"avatar avatar-sm avatar-online\"><img src=\"/assets/theme/assets/img/img7.jpg\" class=\"rounded-circle\" alt=\"\"></div>\n            <div class=\"media-body mg-l-15\">\n              <p><strong>Althea Cabardo</strong> just created a new blog post</p>\n              <span>Mar 13 02:56am</span>\n            </div><!-- media-body -->\n          </div><!-- media -->\n        </a>\n        <a href=\"#\" class=\"dropdown-item\">\n          <div class=\"media\">\n            <div class=\"avatar avatar-sm avatar-online\"><img src=\"/assets/theme/assets/img/img9.jpg\" class=\"rounded-circle\" alt=\"\"></div>\n            <div class=\"media-body mg-l-15\">\n              <p><strong>Adrian Monino</strong> added new comment on your photo</p>\n              <span>Mar 12 10:40pm</span>\n            </div><!-- media-body -->\n          </div><!-- media -->\n        </a>\n        <div class=\"dropdown-footer\"><a href=\"#\">View all Notifications</a></div>\n      </div><!-- dropdown-menu -->\n    </div><!-- dropdown -->\n    <div class=\"dropdown dropdown-profile\">\n      <a href=\"#\" class=\"dropdown-link\" data-toggle=\"dropdown\" data-display=\"static\">\n        <div class=\"avatar avatar-sm\"><img src=\"/assets/theme/assets/img/img1.png\" class=\"rounded-circle\" alt=\"\"></div>\n      </a><!-- dropdown-link -->\n      <div class=\"dropdown-menu dropdown-menu-right tx-13\">\n        <div class=\"avatar avatar-lg mg-b-15\"><img src=\"/assets/theme/assets/img/img1.png\" class=\"rounded-circle\" alt=\"\"></div>\n        <h6 class=\"tx-semibold mg-b-5\"> {{username}}</h6>\n        <p class=\"mg-b-25 tx-12 tx-color-03\">Administrator</p>\n\n        <a href=\"#\" class=\"dropdown-item\"><i data-feather=\"edit-3\"></i> Edit Profile</a>\n        <a href=\"#\" class=\"dropdown-item\"><i data-feather=\"user\"></i> View Profile</a>\n        <div class=\"dropdown-divider\"></div>\n        <a href=\"#\" class=\"dropdown-item\"><i data-feather=\"help-circle\"></i> Help Center</a>\n\n        <a routerLink=\"login\" class=\"dropdown-item\" (click)=\"logout()\"><i data-feather=\"log-out\"></i>Sign Out</a>\n      </div><!-- dropdown-menu -->\n    </div><!-- dropdown -->\n  </div><!-- navbar-right -->\n</header><!-- navbar -->\n\n<!-- </div> -->\n  <router-outlet></router-outlet>\n\n\n","import { ElectionDetailComponent } from './Components/Client/election-detail/election-detail.component';\nimport { CandidatesComponent } from './Components/Client/candidates/candidates.component';\nimport { ElectionsComponent } from './Components/Client/elections/elections.component';\nimport { AuthGuard } from './Auth/auth.guard';\nimport { LoginComponent } from './Components/Security/login/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { from } from 'rxjs';\nimport { EmployeeAddComponent } from './Components/employees/employee-add/employee-add.component';\nimport { EmployeeListComponent } from './Components/employees/employee-list/employee-list.component';\nimport { PageNotFoundComponent } from './Components/page-not-found/page-not-found.component';\nimport { LoginPrivateComponent } from './Components/Security/login-private/login-private.component';\n\nconst routes: Routes = [\n  { path: \"login\", component: LoginComponent },\n  { path: \"login/private\", component: LoginPrivateComponent },\n  { path: \"elections\", component: ElectionsComponent, canActivate: [AuthGuard] },\n  { path: \"elections/detail/:id\", component: ElectionDetailComponent, canActivate: [AuthGuard] },\n  { path: \"candidates/:id\", component: CandidatesComponent },\n  { path: \"\", redirectTo: \"elections\", pathMatch: \"full\" },\n  { path: \"**\", component: PageNotFoundComponent }\n  // ,\n  //   {\n  //     path: \"employee/add\",\n  //     component: EmployeeAddComponent, canActivate: [AuthGuard]\n  //   },\n  //   {\n  //     path: \"employee/edit/:id\",\n  //     component: EmployeeAddComponent, canActivate: [AuthGuard]\n  //   },\n  //   {\n  //     path: \"employee/list\",\n  //     component: EmployeeListComponent, canActivate: [AuthGuard]\n  //   },\n  //   {\n  //     path: \"\",\n  //     redirectTo: \"employee/add\", canActivate: [AuthGuard],\n  //     pathMatch: \"full\"\n  //   },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { PrivateAccountService } from './services/private-account.service';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SlimLoadingBarModule } from \"ng2-slim-loading-bar\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { EmployeeService } from \"./services/employee.service\";\nimport { ElectionsService } from \"./services/elections.service\";\nimport { EmployeeAddComponent } from './Components/employees/employee-add/employee-add.component';\nimport { EmployeeListComponent } from './Components/employees/employee-list/employee-list.component';\nimport { PageNotFoundComponent } from './Components/page-not-found/page-not-found.component';\nimport { AppComponent } from './Shared/app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoginComponent } from './Components/Security/login/login.component';\nimport { RegistrationComponent } from './Components/Security/registration/registration.component';\nimport { AuthGuard } from './auth/auth.guard';\n\nimport { LoginPrivateComponent } from './Components/Security/login-private/login-private.component';\nimport { ElectionsComponent } from './Components/Client/elections/elections.component';\nimport { CandidatesComponent } from './Components/Client/candidates/candidates.component';\nimport { ElectionDetailComponent } from './Components/Client/election-detail/election-detail.component';\n\n// the scanner!\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\n\n\n@NgModule({\n  declarations: [\n    EmployeeAddComponent,\n    EmployeeListComponent,\n    PageNotFoundComponent,\n    AppComponent,\n    LoginComponent,\n    RegistrationComponent,\n    LoginPrivateComponent,\n    ElectionsComponent,\n    CandidatesComponent,\n    ElectionDetailComponent\n  ],\n  imports: [\n    ZXingScannerModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    SlimLoadingBarModule,\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [\n    // AuthGuard,\n    PrivateAccountService,\n    ElectionsService,\n    {\n       provide: HTTP_INTERCEPTORS,\n       useClass: AuthInterceptor,\n       multi: true\n    }\n    // EmployeeService,\n    // {\n    //   provide: HTTP_INTERCEPTORS,\n    //   useClass: AuthInterceptor,\n    //   multi: true\n    // }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// https://appdividend.com/2018/11/04/angular-7-crud-example-mean-stack-tutorial/\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpUserEvent, HttpEvent } from \"@angular/common/http\";\nimport { Observable } from \"rxjs/Observable\";\nimport 'rxjs/add/operator/do';\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (req.headers.get('No-Auth') === \"True\") {\n      return next.handle(req.clone());\n    }\n    if (localStorage.getItem('userPublicKey') != null) {\n\n      const clonedreq = req.clone({\n        headers: req.headers\n          .set('Content-Type', 'application/json')\n          .set(\"PublicKey\", localStorage.getItem('userPublicKey'))\n          .set('PrivateKey', localStorage.getItem('userPrivateKey'))\n\n      });\n      return next.handle(clonedreq)\n        .do(\n          succ => { },\n          err => {\n            console.log(\"Auth-inter : \", err);\n            if (err.status === 401) {\n              this.router.navigateByUrl('/login/private');\n            }\n          }\n        );\n    } else {\n      this.router.navigateByUrl('/login/private');\n    }\n  }\n}\n","\nexport const _baseUrl = \"https://votechainx.azurewebsites.net\";\nexport const baseUrl = \"https://localhost:5005\";\n","export class DeviceVM {\n\n\n  private _deviceId: string;\n  public get deviceId(): string {\n    return this._deviceId;\n  }\n  public set deviceId(v: string) {\n    this._deviceId = v;\n  }\n\n\n  private _deviceLabel: string;\n  public get deviceLabel(): string {\n    return this._deviceLabel;\n  }\n  public set deviceLabel(v: string) {\n    this._deviceLabel = v;\n  }\n\n\n\n\n}\n","export class LoginPrivate {\n  privateKey: string;\n\n  constructor(privateKey: string) {\n    this.privateKey = privateKey;\n  }\n}\n","\nexport class Vote {\n  electionAddress: string;\n  candidate: string;\n  /**\n   *\n   */\n  constructor(electionAddress: string, candidate: string) {\n    this.candidate = candidate;\n    this.electionAddress = electionAddress;\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '../models/user';\nimport { baseUrl } from '../models/config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n\n\n  constructor(private http: HttpClient) { }\n\n  signInAccount(user: User) {\n    // var requestHeader = new HttpHeaders({'No-Auth': 'True'});\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json', 'No-Auth': 'True'}) };\n    return this.http.post<User>(baseUrl + '/sign-in', user, httpOptions);\n  }\n  signoutAccount() {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.post<\"\">(baseUrl + '/tokens/cancel', httpOptions);\n  }\n}\n","import { Vote } from './../models/vote';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { baseUrl } from '../models/config';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ElectionsService {\n  constructor(private http: HttpClient) { }\n  getAllElectionList() {\n    return this.http.get(baseUrl + '/api/wallet/Election/GetElectionList');\n  }\n  getElectionDetails(electionAddress: string) {\n    return this.http.get(baseUrl + '/api/wallet/Election/GetElectionDetailsByAddress?electionAddress=' + electionAddress);\n  }\n  userVote(vote: Vote) {\n    return this.http.post<Vote>(baseUrl + '/api/wallet/Election/UserVote', vote);\n  }\n}\n\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { from } from 'rxjs';\nimport { Employee } from '../models/employee';\nimport { HttpHeaders } from '@angular/common/http';\nimport { baseUrl } from '../models/config';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EmployeeService {\n  constructor(private http: HttpClient) { }\n\n  createEmployee(employee: Employee) {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.post<Employee>(baseUrl + '/api/employees', employee, httpOptions);\n  }\n\n  updateEmployee(employee: Employee) {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.put<Employee>(baseUrl + '/api/employees/' + employee.id, employee, httpOptions);\n  }\n  getAllEmployeeList() {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.get(baseUrl + '/api/employees', httpOptions);\n  }\n\n  getEmployeeById( id: number) {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.get(baseUrl + '/api/employees/' + id, httpOptions);\n  }\n\n  deleteEmployeeById( id: number) {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.delete(baseUrl + '/api/employees/' + id, httpOptions);\n  }\n}\n\n","import { LoginPrivate } from './../models/login-private';\n\n\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '../models/user';\nimport { baseUrl } from '../models/config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrivateAccountService {\n\n  constructor(private http: HttpClient) { }\n\n  signInAccount(user: LoginPrivate) {\n    const httpOptions = { headers: new HttpHeaders({'No-Auth': 'True' }) };\n    return this.http.get(baseUrl + '/api/wallet/Profile/GetPublicKeyUser?privateKey=' + user.privateKey, httpOptions);\n  }\n  signoutAccount() {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n    return this.http.post<\"\">(baseUrl + '/tokens/cancel', httpOptions);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}