{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Auth/auth.guard.ts","webpack:///src/app/Components/Client/candidates/candidates.component.ts","webpack:///src/app/Components/Client/candidates/candidates.component.html","webpack:///src/app/Components/Client/elections/elections.component.ts","webpack:///src/app/Components/Client/elections/elections.component.html","webpack:///src/app/Components/Security/login-private/login-private.component.ts","webpack:///src/app/Components/Security/login-private/login-private.component.html","webpack:///src/app/Components/Security/login/login.component.ts","webpack:///src/app/Components/Security/login/login.component.html","webpack:///src/app/Components/Security/registration/registration.component.ts","webpack:///src/app/Components/Security/registration/registration.component.html","webpack:///src/app/Components/employees/employee-add/employee-add.component.ts","webpack:///src/app/Components/employees/employee-add/employee-add.component.html","webpack:///src/app/Components/employees/employee-list/employee-list.component.ts","webpack:///src/app/Components/employees/employee-list/employee-list.component.html","webpack:///src/app/Components/page-not-found/page-not-found.component.ts","webpack:///src/app/Components/page-not-found/page-not-found.component.html","webpack:///src/app/Shared/app.component.ts","webpack:///src/app/Shared/app.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.interceptor.ts","webpack:///src/app/models/config.ts","webpack:///src/app/services/account.service.ts","webpack:///src/app/services/employee.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","router","next","state","localStorage","getItem","navigate","providedIn","CandidatesComponent","selector","templateUrl","styleUrls","ElectionsComponent","LoginPrivateComponent","LoginComponent","fb","route","accountService","createFrom","angForm","group","username","required","password","LoginUserAccount","value","user","signInAccount","subscribe","result","console","log","setItem","accessToken","refreshToken","err","error","message","onFormSubmit","RegistrationComponent","EmployeeAddComponent","employeeService","tittle","buttonText","routeValue","snapshot","params","getEmployee","Number","name","gender","dob","country","city","image","isActive","CreateEmployee","employee","alert","updateEmployee","createEmployee","reset","getEmployeeById","setValue","EmployeeListComponent","getAllEmployeeList","employeeList","fire","title","text","type","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","deleteEmployeeById","data","filter","u","addUser","PageNotFoundComponent","AppComponent","_loadingBar","_router","events","event","navigationInterceptor","start","complete","stop","signoutAccount","removeItem","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthInterceptor","headers","get","handle","clone","clonedreq","set","succ","status","navigateByUrl","baseUrl","AccountService","http","httpOptions","post","EmployeeService","put","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router : Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      if (localStorage.getItem(\"userAccessToken\") != null){\n        return true;\n      }\n      else {\n        this.router.navigate(['/login']);\n      }\n      return false;\n  }\n}\n\n\n// localStorage.getItem(\"userAccessToken\")\n// localStorage.getItem(\"userRefreshToken\")\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-candidates',\n  templateUrl: './candidates.component.html',\n  styleUrls: ['./candidates.component.css']\n})\nexport class CandidatesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  candidates works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-elections',\n  templateUrl: './elections.component.html',\n  styleUrls: ['./elections.component.css']\n})\nexport class ElectionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  elections works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-private',\n  templateUrl: './login-private.component.html',\n  styleUrls: ['./login-private.component.css']\n})\nexport class LoginPrivateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  login-private works!\n</p>\n","import { User } from './../../../models/user';\nimport { Validators } from '@angular/forms';\nimport { AccountService } from './../../../services/account.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  angForm: any;\n  message: string;\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private accountService: AccountService) { }\n\n  ngOnInit() {\n    this.createFrom();\n  }\n\n  createFrom() {\n    this.angForm = this.fb.group({\n      username: [\"\", Validators.required],\n      password: [\"\", Validators.required]\n    });\n  }\n  onFormSubmit() {\n\n     this.LoginUserAccount(this.angForm.value);\n\n  }\n\n  LoginUserAccount(user: User) {\n    this.accountService.signInAccount(user).subscribe(\n      (result: any) => {\n          console.log(\"login\");\n          localStorage.setItem('userAccessToken', result.accessToken);\n          localStorage.setItem('userRefreshToken', result.refreshToken);\n          this.router.navigate(['/employee/list']);\n      },\n      (err: HttpErrorResponse ) => {\n        console.log(err.error.message);\n        this.message = err.error.message;\n      });\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n      <form [formGroup]=\"angForm\" novalidate>\n        <div class=\"form-group\">\n          <label class=\"col-md-4\">username</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"username\" #username />\n        </div>\n        <div *ngIf=\"angForm.controls['username'].invalid && (angForm.controls['username'].dirty || angForm.controls['username'].touched)\"\n          class=\"alert alert-danger\">\n          <div *ngIf=\"angForm.controls['username'].errors.required\">\n              username is required.\n          </div>\n        </div>\n\n\n        <div class=\"form-group\">\n            <label class=\"col-md-4\">password</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"password\" #password />\n          </div>\n          <div *ngIf=\"angForm.controls['password'].invalid && (angForm.controls['password'].dirty || angForm.controls['password'].touched)\"\n            class=\"alert alert-danger\">\n            <div *ngIf=\"angForm.controls['password'].errors.required\">\n                password is required.\n            </div>\n          </div>\n\n<div *ngIf=\"message !=null\" class=\"alert alert-danger\">\n    {{message}}\n</div>\n\n        <div class=\"form-group\">\n          <button type=\"submit\" (click)=\"onFormSubmit()\" [disabled]=\"angForm.pristine || angForm.invalid\" class=\"btn btn-primary btn-block\"> Log In</button>\n        </div>\n      </form>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  registration works!\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { Employee } from 'src/app/models/employee';\nimport { EmployeeService } from 'src/app/services/employee.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n// import { from } from 'rxjs';\n\n\n@Component({\n  selector: 'app-employee-add',\n  templateUrl: './employee-add.component.html',\n  styleUrls: ['./employee-add.component.css']\n})\nexport class EmployeeAddComponent implements OnInit {\n  tittle = \"Employeee Insert\";\n  angForm: any;\n  routeValue: number;\n  buttonText = \"Insert\";\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private employeeService: EmployeeService) {\n\n  }\n  ngOnInit() {\n    this.createFrom();\n    this.routeValue = this.route.snapshot.params.id;\n    console.log(\"param : \", this.route.snapshot.params.id);\n    if (this.routeValue != null) {\n      this.buttonText = \"Update\";\n      this.getEmployee(this.routeValue);\n    }\n  }\n\n  createFrom() {\n    // can controll validation fron component also\n    this.angForm = this.fb.group({\n      id: Number,\n      name: [\"\", Validators.required],\n      gender: [\"\", Validators.required],\n      dob: [],\n      country: [\"\", Validators.required],\n      city: [\"\", Validators.required],\n      image: [\"\"],\n      isActive: [\"\"]\n\n    });\n  }\n\n  onFormSubmit() {\n\n    this.CreateEmployee(this.angForm.value);\n\n  }\n\n  CreateEmployee(employee: Employee) {\n    alert(\"cliceked!\");\n    if (this.routeValue != null) {  // update\n      this.employeeService.updateEmployee(employee).subscribe(\n        (result) => {\n          console.log(\"result:\", result);\n          alert(\"updated successfully!\");\n          // this.angForm.reset();\n        }\n      );\n    } else { // Insert\n\n      alert(\"Insert\");\n      console.log(employee);\n      this.employeeService.createEmployee(employee).subscribe(\n        (result) => {\n          console.log(\"result:\", result);\n          this.router.navigate(['/employee/edit/', result.id]);\n          alert(\"added successfully!\");\n          this.angForm.reset();\n        }\n      );\n    }\n\n  }\n\n  getEmployee(id: number) {\n    console.log(\"get ID: \", id);\n    this.employeeService.getEmployeeById(id).subscribe(\n      (result) => {\n        console.log(result);\n        this.angForm.setValue(result);\n      }\n    );\n  }\n\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <form [formGroup]=\"angForm\" novalidate>\n      <div class=\"form-group\">\n        <label class=\"col-md-4\">Name</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"name\" #name />\n      </div>\n      <div *ngIf=\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\"\n        class=\"alert alert-danger\">\n        <div *ngIf=\"angForm.controls['name'].errors.required\">\n          Name is required.\n        </div>\n      </div>\n\n\n\n      <div class=\"form-group\">\n          <label class=\"col-md-4\">gender</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"gender\" #gender />\n        </div>\n        <div *ngIf=\"angForm.controls['gender'].invalid && (angForm.controls['gender'].dirty || angForm.controls['gender'].touched)\" class=\"alert alert-danger\">\n          <div *ngIf=\"angForm.controls['gender'].errors.required\">\n              gender is required.\n          </div>\n        </div>\n\n\n         <div class=\"form-group\">\n            <label class=\"col-md-4\">dob</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"dob\" #dob />\n          </div>\n           <div *ngIf=\"angForm.controls['dob'].invalid && (angForm.controls['dob'].dirty || angForm.controls['dob'].touched)\"\n            class=\"alert alert-danger\">\n            <div *ngIf=\"angForm.controls['dob'].errors.required\">\n                dob is required.\n            </div>\n          </div>\n\n\n\n\n      <div class=\"form-group\">\n        <label class=\"col-md-4\">country </label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"country\" #country />\n      </div>\n      <div\n        *ngIf=\"angForm.controls['country'].invalid && (angForm.controls['country'].dirty || angForm.controls['country'].touched)\"\n        class=\"alert alert-danger\">\n        <div *ngIf=\"angForm.controls['country'].errors.required\">\n            country is required.\n        </div>\n      </div>\n\n\n\n      <div class=\"form-group\">\n          <label class=\"col-md-4\">city</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"city\" #city />\n        </div>\n        <div *ngIf=\"angForm.controls['city'].invalid && (angForm.controls['city'].dirty || angForm.controls['city'].touched)\"\n          class=\"alert alert-danger\">\n          <div *ngIf=\"angForm.controls['city'].errors.required\">\n              city is required.\n          </div>\n        </div>\n\n\n\n\n      <div class=\"form-group\">\n        <button type=\"submit\" (click)=\"onFormSubmit()\" [disabled]=\"angForm.pristine || angForm.invalid\" class=\"btn btn-primary\">  {{ buttonText }}</button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { from } from 'rxjs';\nimport { Employee } from 'src/app/models/employee';\nimport { EmployeeService } from './../../../services/employee.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n\n  employeeList: any;\n\n  constructor(private router: Router, private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.employeeService.getAllEmployeeList().subscribe(\n      (result) => {\n        console.log(\"list data: \", result);\n        this.employeeList = result;\n      }\n\n    );\n  }\n  addUser(): void {\n    this.router.navigate(['employee/add']);\n  }\n  editUser(employee: Employee) {\n    console.log(\"edit employee:\", employee);\n  }\n  deleteUser(employee: Employee) {\n\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.value) {\n\n        this.employeeService.deleteEmployeeById(employee.id)\n          .subscribe(data => {\n            this.employeeList = this.employeeList.filter(u => u !== employee);\n          });\n      }\n    });\n\n\n    // if (confirm(\"Are you sure?\")) {\n    //   this.employeeService.deleteEmployeeById(employee.id)\n    //     .subscribe(data => {\n    //       this.employeeList = this.employeeList.filter(u => u !== employee);\n    //     });\n    // }\n\n  }\n}\n","<button class=\"btn btn-success\" (click)=\"addUser()\"> Add Employee</button>\n<a [routerLink]=\"['/employee/add']\" > new </a>\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Genger</th>\n      <th>Country</th>\n      <th>City</th>\n      <th>Date of Birth</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let value of employeeList\">\n      <td>{{ value.name }}</td>\n      <td>{{ value.gender }}</td>\n      <td>{{ value.country }}</td>\n      <td>{{ value.city }}</td>\n      <td>{{ value.dob }}</td>\n      <td>\n          <a [routerLink]=\"['/employee/edit', value.id]\" class=\"btn btn-primary\">Edit</a>\n     |\n        <button class=\"btn btn-danger\" (click)=\"deleteUser(value)\">Delete</button>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  page-not-found works!\n</p>\n","import { AccountService } from './../services/account.service';\nimport { Component } from '@angular/core';\nimport { SlimLoadingBarService } from \"ng2-slim-loading-bar\";\nimport { from } from 'rxjs';\nimport { NavigationCancel, Event, NavigationEnd, NavigationError, NavigationStart, Route, Router } from \"@angular/router\";\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = \"angularCrud-u\";\n\n  /**\n   *\n   */\n  // tslint:disable-next-line:variable-name\n  constructor(private _loadingBar: SlimLoadingBarService, private _router: Router, private accountService: AccountService) {\n    this._router.events.subscribe((event: Event) => {\n      this.navigationInterceptor(event);\n    });\n  }\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this._loadingBar.start();\n    }\n    if (event instanceof NavigationEnd) {\n      this._loadingBar.complete();\n    }\n    if (event instanceof NavigationCancel) {\n      this._loadingBar.stop();\n    }\n    if (event instanceof NavigationError) {\n      this._loadingBar.stop();\n    }\n  }\n\n  logout() {\n\n    this.accountService.signoutAccount().subscribe(\n      (result: any) => {\n        localStorage.removeItem('userAccessToken');\n        localStorage.removeItem(\"userRefreshToken\");\n        this._router.navigate(['/login']);\n      },\n      (err: HttpErrorResponse) => {\n        console.log(err.error.message);\n        // this.message = err.error.message;\n      });\n  }\n\n}\n","<ng2-slim-loading-bar color=\"blue\"></ng2-slim-loading-bar>\n\n<nav class=\"navbar navbar-expand-sm bg-light\">\n  <div class=\"container-fluid\">\n    <ul class=\"navbar-nav\">\n      <!-- <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a routerLink=\"login\" class=\"nav-link\">\n          login\n        </a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a routerLink=\"login\" class=\"nav-link\" (click)=\"logout()\">\n          LogOut\n        </a>\n      </li>\n\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a routerLink=\"employee/list\" class=\"nav-link\">\n          Employee List\n        </a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a routerLink=\"employee/add\" class=\"nav-link\">\n          New Employee\n        </a>\n      </li> -->\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a routerLink=\"login/private\" class=\"nav-link\">\n          Private Login\n        </a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a routerLink=\"elections\" class=\"nav-link\">\n          elections\n        </a>\n      </li>\n    </ul>\n\n  </div>\n</nav>\n\n<div class=\"container\">\n  <br>\n  <router-outlet></router-outlet>\n</div>\n","import { CandidatesComponent } from './Components/Client/candidates/candidates.component';\nimport { ElectionsComponent } from './Components/Client/elections/elections.component';\nimport { AuthGuard } from './Auth/auth.guard';\nimport { LoginComponent } from './Components/Security/login/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { from } from 'rxjs';\nimport { EmployeeAddComponent } from './Components/employees/employee-add/employee-add.component';\nimport { EmployeeListComponent } from './Components/employees/employee-list/employee-list.component';\nimport { PageNotFoundComponent } from './Components/page-not-found/page-not-found.component';\nimport { LoginPrivateComponent } from './Components/Security/login-private/login-private.component';\n\nconst routes: Routes = [\n  {\n    path: \"login\",\n    component: LoginComponent\n  },\n  {\n    path: \"login/private\",\n    component: LoginPrivateComponent\n  },\n  {\n    path: \"elections\",\n    component: ElectionsComponent\n  },\n  {\n    path: \"candidates/:id\",\n    component: CandidatesComponent\n  },\n    {\n      path: \"employee/add\",\n      component: EmployeeAddComponent, canActivate:[AuthGuard]\n    },\n    {\n      path: \"employee/edit/:id\",\n      component: EmployeeAddComponent, canActivate:[AuthGuard]\n    },\n    {\n      path: \"employee/list\",\n      component: EmployeeListComponent, canActivate:[AuthGuard]\n    },\n    {\n      path: \"\",\n      redirectTo: \"employee/add\", canActivate: [AuthGuard],\n      pathMatch: \"full\"\n    },\n    {\n      path: \"**\",\n      component: PageNotFoundComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { AuthInterceptor } from './auth/auth.interceptor';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SlimLoadingBarModule } from \"ng2-slim-loading-bar\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { EmployeeService } from \"./services/employee.service\";\nimport { EmployeeAddComponent } from './Components/employees/employee-add/employee-add.component';\nimport { EmployeeListComponent } from './Components/employees/employee-list/employee-list.component';\nimport { PageNotFoundComponent } from './Components/page-not-found/page-not-found.component';\nimport { AppComponent } from './Shared/app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoginComponent } from './Components/Security/login/login.component';\nimport { RegistrationComponent } from './Components/Security/registration/registration.component';\nimport { AuthGuard } from './auth/auth.guard';\n\nimport { LoginPrivateComponent } from './Components/Security/login-private/login-private.component';\nimport { ElectionsComponent } from './Components/Client/elections/elections.component';\nimport { CandidatesComponent } from './Components/Client/candidates/candidates.component';\n\n\n@NgModule({\n  declarations: [\n    EmployeeAddComponent,\n    EmployeeListComponent,\n    PageNotFoundComponent,\n    AppComponent,\n    LoginComponent,\n    RegistrationComponent,\n    LoginPrivateComponent,\n    ElectionsComponent,\n    CandidatesComponent\n  ],\n  imports: [\n    HttpClientModule,\n    ReactiveFormsModule,\n    SlimLoadingBarModule,\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [\n    // AuthGuard,\n    EmployeeService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// https://appdividend.com/2018/11/04/angular-7-crud-example-mean-stack-tutorial/\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpUserEvent, HttpEvent } from \"@angular/common/http\";\nimport { Observable } from \"rxjs/Observable\";\nimport 'rxjs/add/operator/do';\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private router: Router) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.headers.get('No-Auth') === \"True\") {\n            return next.handle(req.clone());\n        }\n\n        if (localStorage.getItem('userAccessToken') != null) {\n            const clonedreq = req.clone({\n                headers: req.headers.set(\"Authorization\", \"Bearer \" + localStorage.getItem('userAccessToken'))\n            });\n            return next.handle(clonedreq)\n                .do(\n                succ => { },\n                err => {\n                    if (err.status === 401) {\n                        this.router.navigateByUrl('/login');\n                    }\n                }\n                );\n        } else {\n            this.router.navigateByUrl('/login');\n        }\n    }\n  }\n","\nexport const baseUrl = \"https://localhost:44326\";\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '../models/user';\nimport { baseUrl } from '../models/config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n\n\n  constructor(private http: HttpClient) { }\n\n  signInAccount(user: User) {\n    // var requestHeader = new HttpHeaders({'No-Auth': 'True'});\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json', 'No-Auth': 'True'}) };\n    return this.http.post<User>(baseUrl + '/sign-in', user, httpOptions);\n  }\n  signoutAccount() {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.post<\"\">(baseUrl + '/tokens/cancel', httpOptions);\n  }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { from } from 'rxjs';\nimport { Employee } from '../models/employee';\nimport { HttpHeaders } from '@angular/common/http';\nimport { baseUrl } from '../models/config';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EmployeeService {\n  constructor(private http: HttpClient) { }\n\n  createEmployee(employee: Employee) {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.post<Employee>(baseUrl + '/api/employees', employee, httpOptions);\n  }\n\n  updateEmployee(employee: Employee) {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.put<Employee>(baseUrl + '/api/employees/' + employee.id, employee, httpOptions);\n  }\n  getAllEmployeeList() {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.get(baseUrl + '/api/employees', httpOptions);\n  }\n\n  getEmployeeById( id: number) {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.get(baseUrl + '/api/employees/' + id, httpOptions);\n  }\n\n  deleteEmployeeById( id: number) {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };\n    return this.http.delete(baseUrl + '/api/employees/' + id, httpOptions);\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}